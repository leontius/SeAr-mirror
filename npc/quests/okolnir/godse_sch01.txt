//===== eAthena Script =======================================
//= Falicious Okolnir - Nidhoggr 1
//===== By: ==================================================
//= L0ne_W0lf
//===== Current Version: ===================================== 
//= 1.2
//===== Compatible With: ===================================== 
//= eAthena SVN
//===== Description: ========================================= 
//= [Aegis Conversion]
//= God Item SE Creation scipt (Brynhild)
//===== Additional Comments: ================================= 
//= 1.0 First version. [L0ne_W0lf]
//= 1.1 First round of bug fixes. (bugreport:3085) [L0ne_W0lf]
//=     Fixed two spawn locations of the key stones in Piamete's room.
//=     Fixed calling an event that doesn't exist when killing Piamete.
//=     Fixed the Wish Maiden not enabling when the boss is killed.
//=     fixed two NPC named that were missed when translating.
//=     Fixed Dialog that was overlooked in some files and not others.
//= 1.2 More bug fixes, sorry it took so long. [L0ne_W0lf]
//=     Fixed message on the portal when the okolnir section is full.
//=     Corrected non-angry Piamette not disabling.
//= Translated v1.2 to Chinese. [5511]
//============================================================

schg_cas01,376,307,3	script	引导者#gq_sch01	899,{
	set .@GID, GetCastleData("schg_cas01",1);
	if (getcharid(2) == .@GID) {
		if ($siz_sch01_on == 0) {
			mes "[引导者]";
			mes "这座城堡有个秘密场所.";
			mes "那就是^4d4dff'奥克尔尼尔'^000000之地.";
			next;
			switch(select("询问有关奥克尔尼尔.:进入奥克尔尼尔.:取消.")) {
			case 1:
				mes "[引导者]";
				mes "奥克尔尼尔是一片虚幻领域...";
				mes "我不晓得奥克尔尼尔是如何存在着的, 但我猜也只有瓦尔基丽娅知道.";
				next;
				mes "[引导者]";
				mes "就像你知道的, 那片领域是由瓦尔基丽娅建造的, 用来考验冒险家的...";
				mes "... 你应该知道进入奥克尔尼尔的资格吧.";
				next;
				select("进入的资格?");
				mes "[引导者]";
				mes "是的, 瓦尔基丽娅非常偏爱强壮的冒险家.";
				mes "只有合格者才可以进入奥克尔尼尔之地和瓦尔哈拉神殿.";
				next;
				mes "[引导者]";
				mes "当所有人聚集在一起的时候, 它的大门就会开启.";
				mes "而钥匙就在这座城堡里.";
				next;
				mes "[引导者]";
				mes "当城堡的^4d4dff商业不少于65, 防御不少于30^000000的时候, 就可以进入奥克尔尼尔.";
				next;
				mes "[引导者]";
				mes "并且, 如果你在奥克尔尼尔通过了所有瓦尔基丽娅的考验!";
				mes "你将会得到一份神秘礼物.";
				next;
				mes "[引导者]";
				mes "你不想进去试试吗?";
				close;
			case 2:
				set .@Defence,GetCastleData("schg_cas01",3);
				set .@Economy,GetCastleData("schg_cas01",2);
				if ((.@Economy > 64) && (.@Defence > 29)) {
					mes "[引导者]";
					mes "非常好! 商业和防御都合格了.";
					mes "你现在可以进入奥克尔尼尔了...";
					mes "你想要现在出发吗?";
					next;
					switch(select("是的, 出发吧.:不.")) {
					case 1:
						if (countitem(7839) > 0) {
							delitem 7839,countitem(7839); //水晶钥匙
						}
						mes "[引导者]";
						mes "很好......";
						mes "咱们出发吧...";
						close2;
						warp "que_qsch01",346,32;
						end;
					case 2:
						mes "[引导者]";
						mes "如果你已经准备好要保护这座城堡了...";
						mes "你可以随时来找我.";
						close;
					}
				}
				else {
					mes "[引导者]";
					mes "你还不具有进入的资格.";
					mes "先发展你的城堡吧...";
					close;
				}
			}
		}
		else if ($siz_sch01_on == 1) {
			mes "[引导者]";
			mes "... 你来啦...";
			mes "祝你好运.";
			next;
			switch(select("出发吧.:不去了.")) {
			case 1:
				if (countitem(7839) > 0) {
					delitem 7839,countitem(7839); //水晶钥匙
				}
				mes "[引导者]";
				mes "希望一切都能如你所愿...";
				close2;
				warp "que_qsch01",346,32;
				end;
			case 2:
				mes "[引导者]";
				mes "什么?";
				mes "这真可惜.";
				close;
			}
		}
		else if ($siz_sch01_on == 2) {
			mes "[引导者]";
			mes "建造奥克尔尼尔需要很长的一段时间.";
			mes ".... 尽管它只是虚幻的...";
			next;
			mes "[引导者]";
			mes "产生那片虚幻领域需要12-13 个小时.";
			close;
		}
		else {
			mes "[引导者]";
			mes "你还得再等等.";
			close;
		}
	}
	else {
		mes "[引导者]";
		mes "... 我怎么从来没见过你啊.";
		mes "陌生人, 你最好现在就离开这里.";
		close;
	}
	end;

OnInit:
	set $gqse_sch01_miro,0;
	set $gqse_sch01_pcc,0;
	set $gqse_sch01_gd,0;
	set $gqse_sch01_nm,0;
	if ($siz_sch01_on == 1) {
		set $siz_sch01_on,0;
	}
	enablenpc "引导者#gq_sch01";
	end;
}

que_qsch01,345,23,0	warp	Gate02#gq_sch01	1,1,schg_cas01,369,306

que_qsch01,345,82,3	script	祈望女神#gq_sch01	403,{
	set .@GID, GetCastleData("schg_cas01",1);
	if (getcharid(2) == .@GID) {
		cutin "wish_maiden31",1;
		if (strcharinfo(0) == getguildmaster(.@GID)) {
			mes "[祈望女神]";
			mes "我就是... 祈望女神.";
			mes "虚幻领域, 奥克尔尼尔的悲伤.";
			mes "击败神灵的人类的代表.";
			next;
			if ((countitem(7830) > 0) && (countitem(7831) > 0) && (countitem(7832) > 0) && (countitem(7833) > 0) && (countitem(7834) > 0) && (countitem(2357) > 0) && (countitem(7510) > 99) && (countitem(969) > 9) && (countitem(985) > 19)) {
				cutin "wish_maiden11",1;
				mes "[祈望女神]";
				mes "你准备好要接受考验来夺取布伦希尔德了吗?";
				next;
				switch(select("是的, 我准备好了:抱歉, 我以后再来吧")) {
				case 1:
					cutin "wish_maiden12",1;
					mes "[祈望女神]";
					mes "我将考验你是否可以得到女神的礼物...";
					mes "听起来很简单吗?";
					next;
					mes "[祈望女神]";
					mes "奥克尔尼尔是一片虚幻的领域.";
					mes "这里不会出现任何有问题的事情.";
					mes "^ff0000你只有一个小时的时间.^000000";
					next;
					cutin "wish_maiden31",1;
					mes "[祈望女神]";
					mes "如果你没有按时完成考验, 奥克尔尼尔就会被销毁, 我也会离开这里去休息.";
					mes "你只能再等到奥克尔尼尔的重新建造...";
					next;
					mes "[祈望女神]";
					mes "你准备好进去了吗?";
					mes "^4d4dff你需要16 到20 位成员^000000.";
					next;
					cutin "wish_maiden11",1;
					mes "[祈望女神]";
					mes "如果你的成员们都准备好的话, 我会开启奥克尔尼尔的大门.";
					next;
					switch(select("我们准备好了.:我们还需要一些时间.")) {
					case 1:
						set .@saram,getmapusers("que_qsch01");
						if (((.@saram > 15) && (.@saram < 21)) || (getgmlevel() == 99)) {
							cutin "wish_maiden12",1;
							mes "[祈望女神]";
							mes "那么我会在我的脚下开启奥克尔尼尔的大门.";
							mes "我会在奥克尔尼尔的最顶层等候你们...";
							next;
							mes "[祈望女神]";
							mes "我希望你们在虚幻的奥克尔尼尔被销毁前, 完成所有的考验...";
							mes "祝你们好运.";
							mapannounce "que_qsch01","祈望女神: 奥克尔尼尔的大门开启了! 记住, 你们只有一个小时的时间.",bc_map,"0x00ff00";
							close2;
							set $gqse_sch01_pcc,.@saram;
							set $siz_sch01_on,1;
							donpcevent "#okolnir_sch01::OnEnable";
							disablenpc "祈望女神#gq_sch01";
							cutin "wish_maiden11",255;
							announce "公会["+ GetGuildName(.@GID) +"]的["+ strcharinfo(0) +"]开启了奥克尔尼尔之地的大门.",bc_all,"0x70dbdb";
							end;
						}
						else {
							cutin "wish_maiden13",1;
							mes "[祈望女神]";
							mes "你们需要有16 到20 名成员才可以开启奥克尔尼尔的大门.";
							mes "等你们准备好的时候再来吧.";
							close2;
						}
						break;
					case 2:
						cutin "wish_maiden13",1;
						mes "[祈望女神]";
						mes "别在犹豫啦.";
						mes "你应该适时抓住机会.";
						mes "召集你所有的成员吧.";
						close2;
					}
					break;
				case 2:
					cutin "wish_maiden32",1;
					mes "[祈望女神]";
					mes "... 你对眼前的考验感到害怕了?";
					mes "....";
					next;
					cutin "wish_maiden13",1;
					mes "[祈望女神]";
					mes "你们认为不可能获得女神的礼物吗?";
					mes "我对你们真感到失望.";
					mes "你们离开这里吧...";
					close2;
				}
			}
			else {
				cutin "wish_maiden11",1;
				mes "[祈望女神]";
				mes "你想要进入奥克尔尼尔吗?";
				mes "只有真正准备好的人才可以进去.";
				mes "你必须带来一些东西才能进入奥克尔尼尔.";
				next;
				mes "[Wish Maiden]";
				mes "女神之泪,";
				mes "瓦尔基丽娅的象征,";
				mes "布伦希尔德的凯甲碎片,";
				mes "英雄的遗骸,";
				mes "瓦尔基丽娅的铠甲,";
				mes "安德瓦利的戒指.";
				next;
				mes "[Wish Maiden]";
				mes "除了这六件东西, 还需要10 块黄金, 20 块铝.";
				mes "还得提供给我很多瓦尔基丽娅的花.";
				next;
				mes "[祈望女神]";
				mes "等所有东西都准备好的时候, 大门就可以被开启.";
				next;
				mes "[祈望女神]";
				mes ".... ";
				mes "........... 然后女神的光辉就会照在你的身上, 你会感觉到更强大...";
				next;
				mes "[祈望女神]";
				mes "记住...";
				mes "你需要收集很多柔软的羽毛.";
				mes "我希望你的梦想能够实现.";
				next;
				mes "[祈望女神]";
				mes "如果你带来这些东西, 我会满足你的所有请求.";
				close2;
			}
		}
		else {
			cutin "wish_maiden31",1;
			mes "[祈望女神]";
			mes "我就是... 祈望女神.";
			mes "虚幻领域, 奥克尔尼尔的悲伤.";
			mes "击败神灵的人类的代表.";
			next;
			mes "[祈望女神]";
			mes "是谁带领你们来到的这片领域.";
			mes "... 我要把我的意愿传递给他.";
			close2;
		}
	}
	else {
		cutin "wish_maiden13",1;
		mes "[祈望女神]";
		mes "... 你并没有取得进入奥克尔尼尔的资格.";
		close2;
		percentheal -100,0;
		cutin "wish_maiden11",255;
		end;
	}
	cutin "wish_maiden11",255;
	end;

OnInit:
	if ($siz_sch01_on == 0) {
		enablenpc "祈望女神#gq_sch01";
	}
	else {
		disablenpc "祈望女神#gq_sch01";
	}
	end;
}

que_qsch01,346,81,0	script	Gate01#gq_sch01	45,1,1,{
	end;

OnInit:
	disablenpc "Gate01#gq_sch01";
	end;

OnEnable:
	enablenpc "Gate01#gq_sch01";
	setcell "que_qsch01",58,302,63,302,cell_walkable,0;
	setcell "que_qsch01",58,302,63,302,cell_shootable,0;
	end;

OnDisable:
	disablenpc "Gate01#gq_sch01";
	killmonsterall "que_qsch01";
	end;

OnTouch:
	set .@saram,getmapusers("que_qsch01");
	if (.@saram < 21) {
		if ($gqse_sch01_miro == $gqse_sch01_pcc) {
			set .@point,rand(1,5);
			if (.@point == 1) {
				warp "que_qsch01",72,271;
				end;
			}
			else if (.@point == 2) {
				warp "que_qsch01",45,243;
				end;
			}
			else if (.@point == 3) {
				warp "que_qsch01",102,248;
				end;
			}
			else if (.@point == 4) {
				warp "que_qsch01",102,300;
				end;
			}
			else {
				warp "que_qsch01",46,300;
				end;
			}
		}
		else if ($gqse_sch01_miro == 0) {
			if (BaseClass == Job_Swordman) {
				monster "que_qsch01",77,271,strcharinfo(0),1652,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Thief) {
				monster "que_qsch01",77,271,strcharinfo(0),1659,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Archer) {
				monster "que_qsch01",77,271,strcharinfo(0),1662,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Mage) {
				monster "que_qsch01",77,271,strcharinfo(0),1663,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Merchant) {
				monster "que_qsch01",77,271,strcharinfo(0),1660,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Acolyte) {
				monster "que_qsch01",77,271,strcharinfo(0),1661,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else {
				monster "que_qsch01",77,271,strcharinfo(0),1652,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			set $gqse_sch01_miro,1;
			warp "que_qsch01",72,271;
			end;
		}
		else if ($gqse_sch01_miro == 1) {
			if (BaseClass == Job_Swordman) {
				monster "que_qsch01",63,278,strcharinfo(0),1652,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Thief) {
				monster "que_qsch01",63,278,strcharinfo(0),1659,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Archer) {
				monster "que_qsch01",63,278,strcharinfo(0),1662,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Mage) {
				monster "que_qsch01",63,278,strcharinfo(0),1663,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Merchant) {
				monster "que_qsch01",63,278,strcharinfo(0),1660,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Acolyte) {
				monster "que_qsch01",63,278,strcharinfo(0),1661,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else {
				monster "que_qsch01",63,278,strcharinfo(0),1652,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			set $gqse_sch01_miro,2;
			warp "que_qsch01",63,282;
			end;
		}
		else if ($gqse_sch01_miro == 2) {
			if (BaseClass == Job_Swordman) {
				monster "que_qsch01",63,294,strcharinfo(0),1652,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Thief) {
				monster "que_qsch01",63,294,strcharinfo(0),1659,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Archer) {
				monster "que_qsch01",63,294,strcharinfo(0),1662,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Mage) {
				monster "que_qsch01",63,294,strcharinfo(0),1663,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Merchant) {
				monster "que_qsch01",63,294,strcharinfo(0),1660,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Acolyte) {
				monster "que_qsch01",63,294,strcharinfo(0),1661,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else {
				monster "que_qsch01",63,294,strcharinfo(0),1652,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			set $gqse_sch01_miro,3;
			warp "que_qsch01",59,294;
			end;
		}
		else if ($gqse_sch01_miro == 3) {
			if (BaseClass == Job_Swordman) {
				monster "que_qsch01",50,300,strcharinfo(0),1652,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Thief) {
				monster "que_qsch01",50,300,strcharinfo(0),1659,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Archer) {
				monster "que_qsch01",50,300,strcharinfo(0),1662,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Mage) {
				monster "que_qsch01",50,300,strcharinfo(0),1663,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Merchant) {
				monster "que_qsch01",50,300,strcharinfo(0),1660,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Acolyte) {
				monster "que_qsch01",50,300,strcharinfo(0),1661,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else {
				monster "que_qsch01",50,300,strcharinfo(0),1652,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			set $gqse_sch01_miro,4;
			warp "que_qsch01",46,300;
			end;
		}
		else if ($gqse_sch01_miro == 4) {
			if (BaseClass == Job_Swordman) {
				monster "que_qsch01",51,280,strcharinfo(0),1652,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Thief) {
				monster "que_qsch01",51,280,strcharinfo(0),1659,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Archer) {
				monster "que_qsch01",51,280,strcharinfo(0),1662,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Mage) {
				monster "que_qsch01",51,280,strcharinfo(0),1663,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Merchant) {
				monster "que_qsch01",51,280,strcharinfo(0),1660,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Acolyte) {
				monster "que_qsch01",51,280,strcharinfo(0),1661,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else {
				monster "que_qsch01",51,280,strcharinfo(0),1652,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			set $gqse_sch01_miro,5;
			warp "que_qsch01",51,285;
			end;
		}
		else if ($gqse_sch01_miro == 5) {
			if (BaseClass == Job_Swordman) {
				monster "que_qsch01",51,258,strcharinfo(0),1652,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Thief) {
				monster "que_qsch01",51,258,strcharinfo(0),1659,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Archer) {
				monster "que_qsch01",51,258,strcharinfo(0),1662,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Mage) {
				monster "que_qsch01",51,258,strcharinfo(0),1663,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Merchant) {
				monster "que_qsch01",51,258,strcharinfo(0),1660,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Acolyte) {
				monster "que_qsch01",51,258,strcharinfo(0),1661,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else {
				monster "que_qsch01",51,258,strcharinfo(0),1652,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			set $gqse_sch01_miro,6;
			warp "que_qsch01",51,262;
			end;
		}
		else if ($gqse_sch01_miro == 6) {
			if (BaseClass == Job_Swordman) {
				monster "que_qsch01",49,243,strcharinfo(0),1652,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Thief) {
				monster "que_qsch01",49,243,strcharinfo(0),1659,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Archer) {
				monster "que_qsch01",49,243,strcharinfo(0),1662,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Mage) {
				monster "que_qsch01",49,243,strcharinfo(0),1663,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Merchant) {
				monster "que_qsch01",49,243,strcharinfo(0),1660,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Acolyte) {
				monster "que_qsch01",49,243,strcharinfo(0),1661,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else {
				monster "que_qsch01",49,243,strcharinfo(0),1652,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			set $gqse_sch01_miro,7;
			warp "que_qsch01",45,243;
			end;
		}
		else if ($gqse_sch01_miro == 7) {
			if (BaseClass == Job_Swordman) {
				monster "que_qsch01",86,249,strcharinfo(0),1652,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Thief) {
				monster "que_qsch01",86,249,strcharinfo(0),1659,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Archer) {
				monster "que_qsch01",86,249,strcharinfo(0),1662,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Mage) {
				monster "que_qsch01",86,249,strcharinfo(0),1663,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Merchant) {
				monster "que_qsch01",86,249,strcharinfo(0),1660,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Acolyte) {
				monster "que_qsch01",86,249,strcharinfo(0),1661,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else {
				monster "que_qsch01",86,249,strcharinfo(0),1652,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			set $gqse_sch01_miro,8;
			warp "que_qsch01",82,249;
			end;
		}
		else if ($gqse_sch01_miro == 8) {
			if (BaseClass == Job_Swordman) {
				monster "que_qsch01",102,243,strcharinfo(0),1652,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Thief) {
				monster "que_qsch01",102,243,strcharinfo(0),1659,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Archer) {
				monster "que_qsch01",102,243,strcharinfo(0),1662,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Mage) {
				monster "que_qsch01",102,243,strcharinfo(0),1663,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Merchant) {
				monster "que_qsch01",102,243,strcharinfo(0),1660,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Acolyte) {
				monster "que_qsch01",102,243,strcharinfo(0),1661,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else {
				monster "que_qsch01",102,243,strcharinfo(0),1652,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			set $gqse_sch01_miro,9;
			warp "que_qsch01",102,248;
			end;
		}
		else if ($gqse_sch01_miro == 9) {
			if (BaseClass == Job_Swordman) {
				monster "que_qsch01",90,256,strcharinfo(0),1652,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Thief) {
				monster "que_qsch01",90,256,strcharinfo(0),1659,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Archer) {
				monster "que_qsch01",90,256,strcharinfo(0),1662,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Mage) {
				monster "que_qsch01",90,256,strcharinfo(0),1663,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Merchant) {
				monster "que_qsch01",90,256,strcharinfo(0),1660,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Acolyte) {
				monster "que_qsch01",90,256,strcharinfo(0),1661,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else {
				monster "que_qsch01",90,256,strcharinfo(0),1652,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			set $gqse_sch01_miro,10;
			warp "que_qsch01",90,260;
			end;
		}
		else if ($gqse_sch01_miro == 10) {
			if (BaseClass == Job_Swordman) {
				monster "que_qsch01",90,283,strcharinfo(0),1652,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Thief) {
				monster "que_qsch01",90,283,strcharinfo(0),1659,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Archer) {
				monster "que_qsch01",90,283,strcharinfo(0),1662,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Mage) {
				monster "que_qsch01",90,283,strcharinfo(0),1663,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Merchant) {
				monster "que_qsch01",90,283,strcharinfo(0),1660,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Acolyte) {
				monster "que_qsch01",90,283,strcharinfo(0),1661,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else {
				monster "que_qsch01",90,283,strcharinfo(0),1652,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			set $gqse_sch01_miro,11;
			warp "que_qsch01",90,280;
			end;
		}
		else if ($gqse_sch01_miro == 11) {
			if (BaseClass == Job_Swordman) {
				monster "que_qsch01",102,295,strcharinfo(0),1652,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Thief) {
				monster "que_qsch01",102,295,strcharinfo(0),1659,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Archer) {
				monster "que_qsch01",102,295,strcharinfo(0),1662,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Mage) {
				monster "que_qsch01",102,295,strcharinfo(0),1663,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Merchant) {
				monster "que_qsch01",102,295,strcharinfo(0),1660,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Acolyte) {
				monster "que_qsch01",102,295,strcharinfo(0),1661,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else {
				monster "que_qsch01",102,295,strcharinfo(0),1652,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			set $gqse_sch01_miro,12;
			warp "que_qsch01",102,300;
			end;
		}
		else if ($gqse_sch01_miro == 12) {
			if (BaseClass == Job_Swordman) {
				monster "que_qsch01",96,285,strcharinfo(0),1652,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Thief) {
				monster "que_qsch01",96,285,strcharinfo(0),1659,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Archer) {
				monster "que_qsch01",96,285,strcharinfo(0),1662,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Mage) {
				monster "que_qsch01",96,285,strcharinfo(0),1663,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Merchant) {
				monster "que_qsch01",96,285,strcharinfo(0),1660,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Acolyte) {
				monster "que_qsch01",96,285,strcharinfo(0),1661,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else {
				monster "que_qsch01",96,285,strcharinfo(0),1652,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			set $gqse_sch01_miro,13;
			warp "que_qsch01",96,290;
			end;
		}
		else if ($gqse_sch01_miro == 13) {
			if (BaseClass == Job_Swordman) {
				monster "que_qsch01",63,278,strcharinfo(0),1652,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Thief) {
				monster "que_qsch01",63,278,strcharinfo(0),1659,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Archer) {
				monster "que_qsch01",63,278,strcharinfo(0),1662,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Mage) {
				monster "que_qsch01",63,278,strcharinfo(0),1663,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Merchant) {
				monster "que_qsch01",63,278,strcharinfo(0),1660,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Acolyte) {
				monster "que_qsch01",63,278,strcharinfo(0),1661,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else {
				monster "que_qsch01",63,278,strcharinfo(0),1652,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			set $gqse_sch01_miro,14;
			warp "que_qsch01",63,282;
			end;
		}
		else if ($gqse_sch01_miro == 14) {
			if (BaseClass == Job_Swordman) {
				monster "que_qsch01",65,243,strcharinfo(0),1652,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Thief) {
				monster "que_qsch01",65,243,strcharinfo(0),1659,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Archer) {
				monster "que_qsch01",65,243,strcharinfo(0),1662,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Mage) {
				monster "que_qsch01",65,243,strcharinfo(0),1663,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Merchant) {
				monster "que_qsch01",65,243,strcharinfo(0),1660,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Acolyte) {
				monster "que_qsch01",65,243,strcharinfo(0),1661,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else {
				monster "que_qsch01",65,243,strcharinfo(0),1652,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			set $gqse_sch01_miro,15;
			warp "que_qsch01",61,243;
			end;
		}
		else if ($gqse_sch01_miro == 15) {
			if (BaseClass == Job_Swordman) {
				monster "que_qsch01",73,249,strcharinfo(0),1652,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Thief) {
				monster "que_qsch01",73,249,strcharinfo(0),1659,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Archer) {
				monster "que_qsch01",73,249,strcharinfo(0),1662,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Mage) {
				monster "que_qsch01",73,249,strcharinfo(0),1663,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Merchant) {
				monster "que_qsch01",73,249,strcharinfo(0),1660,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Acolyte) {
				monster "que_qsch01",73,249,strcharinfo(0),1661,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else {
				monster "que_qsch01",73,249,strcharinfo(0),1652,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			set $gqse_sch01_miro,16;
			warp "que_qsch01",70,249;
			end;
		}
		else if ($gqse_sch01_miro == 16) {
			if (BaseClass == Job_Swordman) {
				monster "que_qsch01",102,275,strcharinfo(0),1652,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Thief) {
				monster "que_qsch01",102,275,strcharinfo(0),1659,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Archer) {
				monster "que_qsch01",102,275,strcharinfo(0),1662,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Mage) {
				monster "que_qsch01",102,275,strcharinfo(0),1663,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Merchant) {
				monster "que_qsch01",102,275,strcharinfo(0),1660,1,"#Gate_manager_sch01::OnMyMobDead";
				end;
			}
			else if (BaseClass == Job_Acolyte) {
				monster "que_qsch01",102,275,strcharinfo(0),1661,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else {
				monster "que_qsch01",102,275,strcharinfo(0),1652,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			set $gqse_sch01_miro,17;
			warp "que_qsch01",102,282;
			end;
		}
		else if ($gqse_sch01_miro == 17) {
			if (BaseClass == Job_Swordman) {
				monster "que_qsch01",70,300,strcharinfo(0),1652,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Thief) {
				monster "que_qsch01",70,300,strcharinfo(0),1659,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Archer) {
				monster "que_qsch01",70,300,strcharinfo(0),1662,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Mage) {
				monster "que_qsch01",70,300,strcharinfo(0),1663,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Merchant) {
				monster "que_qsch01",70,300,strcharinfo(0),1660,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Acolyte) {
				monster "que_qsch01",70,300,strcharinfo(0),1661,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else {
				monster "que_qsch01",70,300,strcharinfo(0),1652,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			set $gqse_sch01_miro,18;
			warp "que_qsch01",66,300;
			end;
		}
		else if ($gqse_sch01_miro == 18) {
			if (BaseClass == Job_Swordman) {
				monster "que_qsch01",57,255,strcharinfo(0),1652,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Thief) {
				monster "que_qsch01",57,255,strcharinfo(0),1659,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Archer) {
				monster "que_qsch01",57,255,strcharinfo(0),1662,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Mage) {
				monster "que_qsch01",57,255,strcharinfo(0),1663,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Merchant) {
				monster "que_qsch01",57,255,strcharinfo(0),1660,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Acolyte) {
				monster "que_qsch01",57,255,strcharinfo(0),1661,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else {
				monster "que_qsch01",57,255,strcharinfo(0),1652,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			set $gqse_sch01_miro,19;
			warp "que_qsch01",57,258;
			end;
		}
		else if ($gqse_sch01_miro == 19) {
			if (BaseClass == Job_Swordman) {
				monster "que_qsch01",84,277,strcharinfo(0),1652,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Thief) {
				monster "que_qsch01",84,277,strcharinfo(0),1659,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Archer) {
				monster "que_qsch01",84,277,strcharinfo(0),1662,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Mage) {
				monster "que_qsch01",84,277,strcharinfo(0),1663,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Merchant) {
				monster "que_qsch01",84,277,strcharinfo(0),1660,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else if (BaseClass == Job_Acolyte) {
				monster "que_qsch01",84,277,strcharinfo(0),1661,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			else {
				monster "que_qsch01",84,277,strcharinfo(0),1652,1,"#Gate_manager_sch01::OnMyMobDead";
			}
			set $gqse_sch01_miro,20;
			warp "que_qsch01",84,280;
			end;
		}
	}
	else {
		mes "已经有太多人进入了, 我想你可能进不去了.";
		close;
	}
	end;
}

que_qsch01,1,4,0	script	#Gate_manager_sch01	844,{
OnMyMobDead:
	if ($gqse_sch01_miro == $gqse_sch01_pcc) {
		if (mobcount("que_qsch01","#Gate_manager_sch01::OnMyMobDead") == 0) {
			donpcevent "#gq_miromob2_sch01::OnEnable";
		}
	}
	end;
}

que_qsch01,1,4,0	script	#gq_miromob2_sch01	844,{
OnEnable:
	initnpctimer;
	end;

OnTimer1000:
	mapannounce "que_qsch01","祈望女神: 看到过去的影子有何感想吗? 这都只是开始哦.",bc_map,"0x00ff00";
	end;

OnTimer6000:
	mapannounce "que_qsch01","祈望女神: 你所见到的所有东西都不是真实的, 可别在神秘花园被抓住了哦.",bc_map,"0x00ff00";
	monster "que_qsch01",72,271,"赛依连 温德森",1640,1,"#gq_miromob2_sch01::OnMyMobDead";
	monster "que_qsch01",63,282,"凯特莉娜 凯罗",1645,1,"#gq_miromob2_sch01::OnMyMobDead";
	monster "que_qsch01",59,294,"莎西尔 德摩",1644,1,"#gq_miromob2_sch01::OnMyMobDead";
	monster "que_qsch01",46,300,"玛嘉雷特 索琳",1643,1,"#gq_miromob2_sch01::OnMyMobDead";
	monster "que_qsch01",51,285,"艾勒梅斯 盖尔",1641,1,"#gq_miromob2_sch01::OnMyMobDead";
	monster "que_qsch01",51,262,"哈沃得 艾尔特艾森",1642,1,"#gq_miromob2_sch01::OnMyMobDead";

	monster "que_qsch01",45,243,"赛依连 温德森",1640,1,"#gq_miromob2_sch01::OnMyMobDead";
	monster "que_qsch01",82,249,"凯特莉娜 凯罗",1645,1,"#gq_miromob2_sch01::OnMyMobDead";
	monster "que_qsch01",102,248,"莎西尔 德摩",1644,1,"#gq_miromob2_sch01::OnMyMobDead";
	monster "que_qsch01",90,260,"玛嘉雷特 索琳",1643,1,"#gq_miromob2_sch01::OnMyMobDead";
	monster "que_qsch01",90,280,"艾勒梅斯 盖尔",1641,1,"#gq_miromob2_sch01::OnMyMobDead";
	monster "que_qsch01",102,300,"哈沃得 艾尔特艾森",1642,1,"#gq_miromob2_sch01::OnMyMobDead";

	monster "que_qsch01",63,282,"赛依连 温德森",1640,1,"#gq_miromob2_sch01::OnMyMobDead";
	monster "que_qsch01",61,243,"凯特莉娜 凯罗",1645,1,"#gq_miromob2_sch01::OnMyMobDead";
	monster "que_qsch01",70,249,"莎西尔 德摩",1644,1,"#gq_miromob2_sch01::OnMyMobDead";
	monster "que_qsch01",102,282,"玛嘉雷特 索琳",1643,1,"#gq_miromob2_sch01::OnMyMobDead";
	monster "que_qsch01",66,300,"艾勒梅斯 盖尔",1641,1,"#gq_miromob2_sch01::OnMyMobDead";
	monster "que_qsch01",57,258,"哈沃得 艾尔特艾森",1642,1,"#gq_miromob2_sch01::OnMyMobDead";
	stopnpctimer;
	end;

Onreset:
	killmonster "que_qsch01","#gq_miromob2_sch01::OnMyMobDead";
	stopnpctimer;
	end;

OnMyMobDead:
	if (mobcount("que_qsch01","#gq_miromob2_sch01::OnMyMobDead") == 0) {
		mapannounce "que_qsch01","神秘花园的出口开启了.",bc_map,"0x00ff00";
		setcell "que_qsch01",58,302,63,302,cell_walkable,1;
		setcell "que_qsch01",58,302,63,302,cell_shootable,1;
		donpcevent "#Maze_Manager_sch01::OnDisable";
	}
	end;
}

que_qsch01,1,1,0	script	#okolnir_sch01	844,{

OnEnable:
	donpcevent "Gate01#gq_sch01::OnEnable";
	donpcevent "#Maze_Manager_sch01::OnEnable";
	donpcevent "#event_start01_sch01::OnEnable";
	donpcevent "#gd_sch01_mobctrl::OnEnable";
	enablenpc "影之守护者#sch01_01";
	enablenpc "影之守护者#sch01_02";
	enablenpc "影之守护者#sch01_03";
	enablenpc "影之守护者#sch01_04";
	enablenpc "血腥猎魔#sch01_ac01";
	enablenpc "血腥猎魔#sch01_ac02";
	enablenpc "血腥猎魔#sch01_ac03";
	enablenpc "血腥猎魔#sch01_ac04";
	enablenpc "神殿管理者#sch01_ac01";
	enablenpc "神殿管理者#sch01_ac02";
	initnpctimer;
	end;

OnDisable:
	disablenpc "祈望女神#gq_sch01";
	donpcevent "#gq_miromob2_sch01::Onreset";
	disablenpc "碧亚玫特#sch01";
	donpcevent "#gdtimer01_sch01::Onstop";
	donpcevent "#gdtimer02_sch01::Onstop";
	donpcevent "#piamette_sch01::Onreset";
	donpcevent "祈望女神#sch01_boss::OnDisable";
	donpcevent "祈望女神#sch01_gift::OnDisable";
	donpcevent "#gd_sch01_mobctrl::Onreset";
	donpcevent "Gate01#gq_sch01::OnDisable";
	donpcevent "#Maze_Manager_sch01::OnDisable";
	donpcevent "#event_start01_sch01::OnDisable";
	donpcevent "#nm_switch_sch01::OnDisable";
	donpcevent "#nmsomsch01_jin01::OnDisable";
	donpcevent "#nmsomsch01_jin02::OnDisable";
	donpcevent "#nmsomsch01_jin03::OnDisable";
	donpcevent "影之守护者#sch01_01::OnDisable";
	donpcevent "影之守护者#sch01_02::OnDisable";
	donpcevent "影之守护者#sch01_03::OnDisable";
	donpcevent "影之守护者#sch01_04::OnDisable";
	donpcevent "血腥猎魔#sch01_ac01::OnDisable";
	donpcevent "血腥猎魔#sch01_ac02::OnDisable";
	donpcevent "血腥猎魔#sch01_ac03::OnDisable";
	donpcevent "血腥猎魔#sch01_ac04::OnDisable";
	donpcevent "神殿管理者#sch01_ac01::OnDisable";
	donpcevent "神殿管理者#sch01_ac02::OnDisable";
	disablenpc "#to_agit_sch01_gate";
	donpcevent "#sch01_stone01::Onreset";
	donpcevent "#sch01_stone02::Onreset";
	donpcevent "#sch01_stone03::Onreset";
	disablenpc "#sch01_cage01";
	disablenpc "#sch01_cage02";
	disablenpc "#sch01_cage03";
	disablenpc "#sch01_cage04";
	disablenpc "#sch01_cage05";
	disablenpc "#sch01_cage06";
	disablenpc "windpath03_sch01";
	disablenpc "windpath04_sch01";
	set $gqse_sch01_miro,0;
	set $gqse_sch01_pcc,0;
	set $gqse_sch01_gd,0;
	set $gqse_sch01_nm,0;
	stopnpctimer;
	end;

Onstop:
	stopnpctimer;
	end;

OnTimer1000:
	mapannounce "que_qsch01","祈望女神: 各位一定要尽力, 奥克尔尼尔将在一小时后消失!",bc_map,"0x00ff00";
	end;

OnTimer1800000:
	mapannounce "que_qsch01","奥克尔尼尔将在30 分钟后消失.",bc_map,"0xff0000";
	end;

OnTimer2400000:
	mapannounce "que_qsch01","奥克尔尼尔将在20 分钟后消失.",bc_map,"0xff0000";
	end;

OnTimer3000000:
	mapannounce "que_qsch01","奥克尔尼尔将在10 分钟后消失.",bc_map,"0xff0000";
	end;

OnTimer3300000:
	mapannounce "que_qsch01","奥克尔尼尔将在5 分钟后消失.",bc_map,"0xff0000";
	end;

OnTimer3360000:
	mapannounce "que_qsch01","奥克尔尼尔将在4 分钟后消失.",bc_map,"0xff0000";
	end;

OnTimer3420000:
	mapannounce "que_qsch01","奥克尔尼尔将在3 分钟后消失.",bc_map,"0xff0000";
	end;

OnTimer3480000:
	mapannounce "que_qsch01","奥克尔尼尔将在2 分钟后消失.",bc_map,"0xff0000";
	end;

OnTimer3540000:
	mapannounce "que_qsch01","奥克尔尼尔将在1 分钟后消失.",bc_map,"0xff0000";
	end;

OnTimer3600000:
	mapannounce "que_qsch01","奥克尔尼尔要消失了.",bc_map,"0x4d4dff";
	disablenpc "祈望女神#gq_sch01";
	donpcevent "#gq_miromob2_sch01::Onreset";
	disablenpc "碧亚玫特#sch01";
	donpcevent "#gdtimer01_sch01::Onstop";
	donpcevent "#gdtimer02_sch01::Onstop";
	donpcevent "#piamette_sch01::Onreset";
	donpcevent "祈望女神#sch01_boss::onDisable";
	donpcevent "祈望女神#sch01_gift::OnDisable";
	donpcevent "#gd_sch01_mobctrl::Onreset";
	donpcevent "Gate01#gq_sch01::OnDisable";
	donpcevent "#Maze_Manager_sch01::OnDisable";
	donpcevent "#event_start01_sch01::OnDisable";
	donpcevent "#nm_switch_sch01::OnDisable";
	donpcevent "#nmsomsch01_jin01::OnDisable";
	donpcevent "#nmsomsch01_jin02::OnDisable";
	donpcevent "#nmsomsch01_jin03::OnDisable";
	donpcevent "影之守护者#sch01_01::OnDisable";
	donpcevent "影之守护者#sch01_02::OnDisable";
	donpcevent "影之守护者#sch01_03::OnDisable";
	donpcevent "影之守护者#sch01_04::OnDisable";
	donpcevent "血腥猎魔#sch01_ac01::OnDisable";
	donpcevent "血腥猎魔#sch01_ac02::OnDisable";
	donpcevent "血腥猎魔#sch01_ac03::OnDisable";
	donpcevent "血腥猎魔#sch01_ac04::OnDisable";
	donpcevent "神殿管理者#sch01_ac01::OnDisable";
	donpcevent "神殿管理者#sch01_ac02::OnDisable";
	disablenpc "#to_agit_sch01_gate";
	donpcevent "#sch01_stone01::Onreset";
	donpcevent "#sch01_stone02::Onreset";
	donpcevent "#sch01_stone03::Onreset";
	disablenpc "#sch01_cage01";
	disablenpc "#sch01_cage02";
	disablenpc "#sch01_cage03";
	disablenpc "#sch01_cage04";
	disablenpc "#sch01_cage05";
	disablenpc "#sch01_cage06";
	disablenpc "windpath03_sch01";
	disablenpc "windpath04_sch01";
	end;

OnTimer3605000:
	mapannounce "que_qsch01","祈望女神: ... 你将长眠在奥克尔尼尔中... ",bc_map,"0x00ff00";
	end;

OnTimer3608000:
	mapannounce "que_qsch01","祈望女神: ... 锻炼你的勇气... 等待下一次机会的来临... ",bc_map,"0x00ff00";
	end;

OnTimer3610000:
	set $gqse_sch01_miro,0;
	set $gqse_sch01_pcc,0;
	set $gqse_sch01_gd,0;
	set $gqse_sch01_nm,0;
	mapwarp "que_qsch01","schg_cas01",369,306;
	end;

OnTimer3611000:
	donpcevent "#okolnir_sch01_time01::OnEnable";
	stopnpctimer;
	end;
}

que_qsch01,1,2,0	script	#Maze_Manager_sch01	844,{
OnInit:
	donpcevent "#miro_bf_sch01::OnDisable";
	donpcevent "#miro_rf_sch01::OnDisable";
	donpcevent "#miro_yf_sch01::OnDisable";
	end;

OnEnable:
	initnpctimer;
	end;

OnDisable:
	donpcevent "#miro_bf_sch01::OnDisable";
	donpcevent "#miro_rf_sch01::OnDisable";
	donpcevent "#miro_yf_sch01::OnDisable";
	stopnpctimer;
	end;

OnTimer1000:
	donpcevent "#miro_rf_sch01::OnDisable";
	end;

OnTimer2000:
	donpcevent "#miro_yf_sch01::OnDisable";
	end;

OnTimer3000:
	donpcevent "#miro_bf_sch01::OnEnable";
	end;

OnTimer120000:
	donpcevent "#miro_bf_sch01::OnDisable";
	end;

OnTimer121000:
	donpcevent "#miro_yf_sch01::OnDisable";
	end;

OnTimer123000:
	donpcevent "#miro_rf_sch01::OnEnable";
	end;

OnTimer240000:
	donpcevent "#miro_bf_sch01::OnDisable";
	end;

OnTimer241000:
	donpcevent "#miro_rf_sch01::OnDisable";
	end;

OnTimer242000:
	donpcevent "#miro_yf_sch01::OnEnable";
	end;

OnTimer360000:
	donpcevent "#Maze_Manager_sch01::OnEnable";
	end;
}

que_qsch01,2,1,0	script	#miro_bf_sch01	844,{

OnEnable:
	monster "que_qsch01",44,270," ",1934,1,"#miro_bf_sch01::OnMyMobDead";
	monster "que_qsch01",46,270," ",1934,1,"#miro_bf_sch01::OnMyMobDead";
	monster "que_qsch01",50,287," ",1934,1,"#miro_bf_sch01::OnMyMobDead";
	monster "que_qsch01",52,287," ",1934,1,"#miro_bf_sch01::OnMyMobDead";
	monster "que_qsch01",50,265," ",1934,1,"#miro_bf_sch01::OnMyMobDead";
	monster "que_qsch01",52,265," ",1934,1,"#miro_bf_sch01::OnMyMobDead";
	monster "que_qsch01",56,279," ",1934,1,"#miro_bf_sch01::OnMyMobDead";
	monster "que_qsch01",58,279," ",1934,1,"#miro_bf_sch01::OnMyMobDead";
	monster "que_qsch01",64,301," ",1934,1,"#miro_bf_sch01::OnMyMobDead";
	monster "que_qsch01",64,298," ",1934,1,"#miro_bf_sch01::OnMyMobDead";
	monster "que_qsch01",62,272," ",1934,1,"#miro_bf_sch01::OnMyMobDead";
	monster "que_qsch01",64,272," ",1934,1,"#miro_bf_sch01::OnMyMobDead";
	monster "que_qsch01",58,245," ",1934,1,"#miro_bf_sch01::OnMyMobDead";
	monster "que_qsch01",58,243," ",1934,1,"#miro_bf_sch01::OnMyMobDead";
	monster "que_qsch01",72,289," ",1934,1,"#miro_bf_sch01::OnMyMobDead";
	monster "que_qsch01",72,287," ",1934,1,"#miro_bf_sch01::OnMyMobDead";
	monster "que_qsch01",68,257," ",1934,1,"#miro_bf_sch01::OnMyMobDead";
	monster "que_qsch01",68,255," ",1934,1,"#miro_bf_sch01::OnMyMobDead";
	monster "que_qsch01",73,263," ",1934,1,"#miro_bf_sch01::OnMyMobDead";
	monster "que_qsch01",73,261," ",1934,1,"#miro_bf_sch01::OnMyMobDead";
	monster "que_qsch01",75,251," ",1934,1,"#miro_bf_sch01::OnMyMobDead";
	monster "que_qsch01",75,249," ",1934,1,"#miro_bf_sch01::OnMyMobDead";
	monster "que_qsch01",79,283," ",1934,1,"#miro_bf_sch01::OnMyMobDead";
	monster "que_qsch01",79,281," ",1934,1,"#miro_bf_sch01::OnMyMobDead";
	monster "que_qsch01",82,271," ",1934,1,"#miro_bf_sch01::OnMyMobDead";
	monster "que_qsch01",84,271," ",1934,1,"#miro_bf_sch01::OnMyMobDead";
	monster "que_qsch01",89,295," ",1934,1,"#miro_bf_sch01::OnMyMobDead";
	monster "que_qsch01",89,293," ",1934,1,"#miro_bf_sch01::OnMyMobDead";
	monster "que_qsch01",88,276," ",1934,1,"#miro_bf_sch01::OnMyMobDead";
	monster "que_qsch01",90,276," ",1934,1,"#miro_bf_sch01::OnMyMobDead";
	monster "que_qsch01",88,266," ",1934,1,"#miro_bf_sch01::OnMyMobDead";
	monster "que_qsch01",90,266," ",1934,1,"#miro_bf_sch01::OnMyMobDead";
	monster "que_qsch01",94,256," ",1934,1,"#miro_bf_sch01::OnMyMobDead";
	monster "que_qsch01",96,256," ",1934,1,"#miro_bf_sch01::OnMyMobDead";
	monster "que_qsch01",64,301," ",1934,1,"#miro_bf_sch01::OnMyMobDead";
	monster "que_qsch01",64,299," ",1934,1,"#miro_bf_sch01::OnMyMobDead";
	monster "que_qsch01",100,251," ",1934,1,"#miro_bf_sch01::OnMyMobDead";
	monster "que_qsch01",102,251," ",1934,1,"#miro_bf_sch01::OnMyMobDead";
	setcell "que_qsch01",44,270,47,270,cell_walkable,0;
	setcell "que_qsch01",44,270,47,270,cell_shootable,0;
	setcell "que_qsch01",50,287,53,287,cell_walkable,0;
	setcell "que_qsch01",50,287,53,287,cell_shootable,0;
	setcell "que_qsch01",50,265,53,265,cell_walkable,0;
	setcell "que_qsch01",50,265,53,265,cell_shootable,0;
	setcell "que_qsch01",56,279,59,279,cell_walkable,0;
	setcell "que_qsch01",56,279,59,279,cell_shootable,0;
	setcell "que_qsch01",64,298,64,301,cell_walkable,0;
	setcell "que_qsch01",64,298,64,301,cell_shootable,0;
	setcell "que_qsch01",62,272,65,272,cell_walkable,0;
	setcell "que_qsch01",62,272,65,272,cell_shootable,0;
	setcell "que_qsch01",58,242,58,245,cell_walkable,0;
	setcell "que_qsch01",58,242,58,245,cell_shootable,0;
	setcell "que_qsch01",72,286,72,289,cell_walkable,0;
	setcell "que_qsch01",72,286,72,289,cell_shootable,0;
	setcell "que_qsch01",68,254,68,259,cell_walkable,0;
	setcell "que_qsch01",68,254,68,259,cell_shootable,0;
	setcell "que_qsch01",73,260,73,263,cell_walkable,0;
	setcell "que_qsch01",73,260,73,263,cell_shootable,0;
	setcell "que_qsch01",75,248,75,251,cell_walkable,0;
	setcell "que_qsch01",75,248,75,251,cell_shootable,0;
	setcell "que_qsch01",79,280,79,283,cell_walkable,0;
	setcell "que_qsch01",79,280,79,283,cell_shootable,0;
	setcell "que_qsch01",82,271,85,271,cell_walkable,0;
	setcell "que_qsch01",82,271,85,271,cell_shootable,0;
	setcell "que_qsch01",89,292,89,295,cell_walkable,0;
	setcell "que_qsch01",89,292,89,295,cell_shootable,0;
	setcell "que_qsch01",88,276,91,276,cell_walkable,0;
	setcell "que_qsch01",88,276,91,276,cell_shootable,0;
	setcell "que_qsch01",88,266,91,266,cell_walkable,0;
	setcell "que_qsch01",88,266,91,266,cell_shootable,0;
	setcell "que_qsch01",94,256,97,256,cell_walkable,0;
	setcell "que_qsch01",94,256,97,256,cell_shootable,0;
	setcell "que_qsch01",64,298,64,301,cell_walkable,0;
	setcell "que_qsch01",64,298,64,301,cell_shootable,0;
	setcell "que_qsch01",100,251,103,251,cell_walkable,0;
	setcell "que_qsch01",100,251,103,251,cell_shootable,0;
	end;

OnDisable:
	killmonster "que_qsch01","#miro_bf_sch01::OnMyMobDead";
	setcell "que_qsch01",44,270,47,270,cell_walkable,1;
	setcell "que_qsch01",44,270,47,270,cell_shootable,1;
	setcell "que_qsch01",50,287,53,287,cell_walkable,1;
	setcell "que_qsch01",50,287,53,287,cell_shootable,1;
	setcell "que_qsch01",50,265,53,265,cell_walkable,1;
	setcell "que_qsch01",50,265,53,265,cell_shootable,1;
	setcell "que_qsch01",56,279,59,279,cell_walkable,1;
	setcell "que_qsch01",56,279,59,279,cell_shootable,1;
	setcell "que_qsch01",64,298,64,301,cell_walkable,1;
	setcell "que_qsch01",64,298,64,301,cell_shootable,1;
	setcell "que_qsch01",62,272,65,272,cell_walkable,1;
	setcell "que_qsch01",62,272,65,272,cell_shootable,1;
	setcell "que_qsch01",58,242,58,245,cell_walkable,1;
	setcell "que_qsch01",58,242,58,245,cell_shootable,1;
	setcell "que_qsch01",72,286,72,289,cell_walkable,1;
	setcell "que_qsch01",72,286,72,289,cell_shootable,1;
	setcell "que_qsch01",68,254,68,259,cell_walkable,1;
	setcell "que_qsch01",68,254,68,259,cell_shootable,1;
	setcell "que_qsch01",73,260,73,263,cell_walkable,1;
	setcell "que_qsch01",73,260,73,263,cell_shootable,1;
	setcell "que_qsch01",75,248,75,251,cell_walkable,1;
	setcell "que_qsch01",75,248,75,251,cell_shootable,1;
	setcell "que_qsch01",79,280,79,283,cell_walkable,1;
	setcell "que_qsch01",79,280,79,283,cell_shootable,1;
	setcell "que_qsch01",82,271,85,271,cell_walkable,1;
	setcell "que_qsch01",82,271,85,271,cell_shootable,1;
	setcell "que_qsch01",89,292,89,295,cell_walkable,1;
	setcell "que_qsch01",89,292,89,295,cell_shootable,1;
	setcell "que_qsch01",88,276,91,276,cell_walkable,1;
	setcell "que_qsch01",88,276,91,276,cell_shootable,1;
	setcell "que_qsch01",88,266,91,266,cell_walkable,1;
	setcell "que_qsch01",88,266,91,266,cell_shootable,1;
	setcell "que_qsch01",94,256,97,256,cell_walkable,1;
	setcell "que_qsch01",94,256,97,256,cell_shootable,1;
	setcell "que_qsch01",64,298,64,301,cell_walkable,1;
	setcell "que_qsch01",64,298,64,301,cell_shootable,1;
	setcell "que_qsch01",100,251,103,251,cell_walkable,1;
	setcell "que_qsch01",100,251,103,251,cell_shootable,1;
	end;

OnMyMobDead:
	end;
}

que_qsch01,2,2,0	script	#miro_rf_sch01	844,{

OnEnable:
	monster "que_qsch01",57,301," ",1935,1,"#miro_rf_sch01::OnMyMobDead";
	monster "que_qsch01",57,299," ",1935,1,"#miro_rf_sch01::OnMyMobDead";
	monster "que_qsch01",48,291," ",1935,1,"#miro_rf_sch01::OnMyMobDead";
	monster "que_qsch01",48,289," ",1935,1,"#miro_rf_sch01::OnMyMobDead";
	monster "que_qsch01",68,290," ",1935,1,"#miro_rf_sch01::OnMyMobDead";
	monster "que_qsch01",70,290," ",1935,1,"#miro_rf_sch01::OnMyMobDead";
	monster "que_qsch01",72,295," ",1935,1,"#miro_rf_sch01::OnMyMobDead";
	monster "que_qsch01",72,293," ",1935,1,"#miro_rf_sch01::OnMyMobDead";
	monster "que_qsch01",90,296," ",1935,1,"#miro_rf_sch01::OnMyMobDead";
	monster "que_qsch01",92,296," ",1935,1,"#miro_rf_sch01::OnMyMobDead";
	monster "que_qsch01",56,282," ",1935,1,"#miro_rf_sch01::OnMyMobDead";
	monster "que_qsch01",58,282," ",1935,1,"#miro_rf_sch01::OnMyMobDead";
	monster "que_qsch01",66,283," ",1935,1,"#miro_rf_sch01::OnMyMobDead";
	monster "que_qsch01",66,281," ",1935,1,"#miro_rf_sch01::OnMyMobDead";
	monster "que_qsch01",80,284," ",1935,1,"#miro_rf_sch01::OnMyMobDead";
	monster "que_qsch01",82,284," ",1935,1,"#miro_rf_sch01::OnMyMobDead";
	monster "que_qsch01",44,273," ",1935,1,"#miro_rf_sch01::OnMyMobDead";
	monster "que_qsch01",46,273," ",1935,1,"#miro_rf_sch01::OnMyMobDead";
	monster "que_qsch01",50,273," ",1935,1,"#miro_rf_sch01::OnMyMobDead";
	monster "que_qsch01",52,273," ",1935,1,"#miro_rf_sch01::OnMyMobDead";
	monster "que_qsch01",54,269," ",1935,1,"#miro_rf_sch01::OnMyMobDead";
	monster "que_qsch01",54,267," ",1935,1,"#miro_rf_sch01::OnMyMobDead";
	monster "que_qsch01",66,271," ",1935,1,"#miro_rf_sch01::OnMyMobDead";
	monster "que_qsch01",66,270," ",1935,1,"#miro_rf_sch01::OnMyMobDead";
	monster "que_qsch01",81,273," ",1935,1,"#miro_rf_sch01::OnMyMobDead";
	monster "que_qsch01",81,272," ",1935,1,"#miro_rf_sch01::OnMyMobDead";
	monster "que_qsch01",88,276," ",1935,1,"#miro_rf_sch01::OnMyMobDead";
	monster "que_qsch01",90,276," ",1935,1,"#miro_rf_sch01::OnMyMobDead";
	monster "que_qsch01",94,276," ",1935,1,"#miro_rf_sch01::OnMyMobDead";
	monster "que_qsch01",96,276," ",1935,1,"#miro_rf_sch01::OnMyMobDead";
	monster "que_qsch01",64,258," ",1935,1,"#miro_rf_sch01::OnMyMobDead";
	monster "que_qsch01",66,258," ",1935,1,"#miro_rf_sch01::OnMyMobDead";
	monster "que_qsch01",76,263," ",1935,1,"#miro_rf_sch01::OnMyMobDead";
	monster "que_qsch01",76,261," ",1935,1,"#miro_rf_sch01::OnMyMobDead";
	monster "que_qsch01",87,265," ",1935,1,"#miro_rf_sch01::OnMyMobDead";
	monster "que_qsch01",87,263," ",1935,1,"#miro_rf_sch01::OnMyMobDead";
	monster "que_qsch01",50,252," ",1935,1,"#miro_rf_sch01::OnMyMobDead";
	monster "que_qsch01",52,252," ",1935,1,"#miro_rf_sch01::OnMyMobDead";
	monster "que_qsch01",76,252," ",1935,1,"#miro_rf_sch01::OnMyMobDead";
	monster "que_qsch01",78,252," ",1935,1,"#miro_rf_sch01::OnMyMobDead";
	monster "que_qsch01",99,255," ",1935,1,"#miro_rf_sch01::OnMyMobDead";
	monster "que_qsch01",99,253," ",1935,1,"#miro_rf_sch01::OnMyMobDead";
	monster "que_qsch01",53,245," ",1935,1,"#miro_rf_sch01::OnMyMobDead";
	monster "que_qsch01",53,243," ",1935,1,"#miro_rf_sch01::OnMyMobDead";
	setcell "que_qsch01",57,298,57,301,cell_walkable,0;
	setcell "que_qsch01",57,298,57,301,cell_shootable,0;
	setcell "que_qsch01",48,288,48,291,cell_walkable,0;
	setcell "que_qsch01",48,288,48,291,cell_shootable,0;
	setcell "que_qsch01",68,290,71,290,cell_walkable,0;
	setcell "que_qsch01",68,290,71,290,cell_shootable,0;
	setcell "que_qsch01",72,292,72,295,cell_walkable,0;
	setcell "que_qsch01",72,292,72,295,cell_shootable,0;
	setcell "que_qsch01",90,296,93,296,cell_walkable,0;
	setcell "que_qsch01",90,296,93,296,cell_shootable,0;
	setcell "que_qsch01",56,282,59,282,cell_walkable,0;
	setcell "que_qsch01",56,282,59,282,cell_shootable,0;
	setcell "que_qsch01",66,280,66,283,cell_walkable,0;
	setcell "que_qsch01",66,280,66,283,cell_shootable,0;
	setcell "que_qsch01",80,284,83,284,cell_walkable,0;
	setcell "que_qsch01",80,284,83,284,cell_shootable,0;
	setcell "que_qsch01",44,273,47,273,cell_walkable,0;
	setcell "que_qsch01",44,273,47,273,cell_shootable,0;
	setcell "que_qsch01",50,273,53,273,cell_walkable,0;
	setcell "que_qsch01",50,273,53,273,cell_shootable,0;
	setcell "que_qsch01",54,266,54,269,cell_walkable,0;
	setcell "que_qsch01",54,266,54,269,cell_shootable,0;
	setcell "que_qsch01",66,270,66,271,cell_walkable,0;
	setcell "que_qsch01",66,270,66,271,cell_shootable,0;
	setcell "que_qsch01",81,272,81,273,cell_walkable,0;
	setcell "que_qsch01",81,272,81,273,cell_shootable,0;
	setcell "que_qsch01",88,276,91,276,cell_walkable,0;
	setcell "que_qsch01",88,276,91,276,cell_shootable,0;
	setcell "que_qsch01",94,276,97,276,cell_walkable,0;
	setcell "que_qsch01",94,276,97,276,cell_shootable,0;
	setcell "que_qsch01",64,258,67,258,cell_walkable,0;
	setcell "que_qsch01",64,258,67,258,cell_shootable,0;
	setcell "que_qsch01",76,260,76,263,cell_walkable,0;
	setcell "que_qsch01",76,260,76,263,cell_shootable,0;
	setcell "que_qsch01",87,262,87,265,cell_walkable,0;
	setcell "que_qsch01",87,262,87,265,cell_shootable,0;
	setcell "que_qsch01",50,252,53,252,cell_walkable,0;
	setcell "que_qsch01",50,252,53,252,cell_shootable,0;
	setcell "que_qsch01",76,252,79,252,cell_walkable,0;
	setcell "que_qsch01",76,252,79,252,cell_shootable,0;
	setcell "que_qsch01",99,252,99,255,cell_walkable,0;
	setcell "que_qsch01",99,252,99,255,cell_shootable,0;
	setcell "que_qsch01",53,242,53,245,cell_walkable,0;
	setcell "que_qsch01",53,242,53,245,cell_shootable,0;
	end;

OnDisable:
	killmonster "que_qsch01","#miro_rf_sch01::OnMyMobDead";
	setcell "que_qsch01",57,298,57,301,cell_walkable,1;
	setcell "que_qsch01",57,298,57,301,cell_shootable,1;
	setcell "que_qsch01",48,288,48,291,cell_walkable,1;
	setcell "que_qsch01",48,288,48,291,cell_shootable,1;
	setcell "que_qsch01",68,290,71,290,cell_walkable,1;
	setcell "que_qsch01",68,290,71,290,cell_shootable,1;
	setcell "que_qsch01",72,292,72,295,cell_walkable,1;
	setcell "que_qsch01",72,292,72,295,cell_shootable,1;
	setcell "que_qsch01",90,296,93,296,cell_walkable,1;
	setcell "que_qsch01",90,296,93,296,cell_shootable,1;
	setcell "que_qsch01",56,282,59,282,cell_walkable,1;
	setcell "que_qsch01",56,282,59,282,cell_shootable,1;
	setcell "que_qsch01",66,280,66,283,cell_walkable,1;
	setcell "que_qsch01",66,280,66,283,cell_shootable,1;
	setcell "que_qsch01",80,284,83,284,cell_walkable,1;
	setcell "que_qsch01",80,284,83,284,cell_shootable,1;
	setcell "que_qsch01",44,273,47,273,cell_walkable,1;
	setcell "que_qsch01",44,273,47,273,cell_shootable,1;
	setcell "que_qsch01",50,273,53,273,cell_walkable,1;
	setcell "que_qsch01",50,273,53,273,cell_shootable,1;
	setcell "que_qsch01",54,266,54,269,cell_walkable,1;
	setcell "que_qsch01",54,266,54,269,cell_shootable,1;
	setcell "que_qsch01",66,270,66,271,cell_walkable,1;
	setcell "que_qsch01",66,270,66,271,cell_shootable,1;
	setcell "que_qsch01",81,272,81,273,cell_walkable,1;
	setcell "que_qsch01",81,272,81,273,cell_shootable,1;
	setcell "que_qsch01",88,276,91,276,cell_walkable,1;
	setcell "que_qsch01",88,276,91,276,cell_shootable,1;
	setcell "que_qsch01",94,276,97,276,cell_walkable,1;
	setcell "que_qsch01",94,276,97,276,cell_shootable,1;
	setcell "que_qsch01",64,258,67,258,cell_walkable,1;
	setcell "que_qsch01",64,258,67,258,cell_shootable,1;
	setcell "que_qsch01",76,260,76,263,cell_walkable,1;
	setcell "que_qsch01",76,260,76,263,cell_shootable,1;
	setcell "que_qsch01",87,262,87,265,cell_walkable,1;
	setcell "que_qsch01",87,262,87,265,cell_shootable,1;
	setcell "que_qsch01",50,252,53,252,cell_walkable,1;
	setcell "que_qsch01",50,252,53,252,cell_shootable,1;
	setcell "que_qsch01",76,252,79,252,cell_walkable,1;
	setcell "que_qsch01",76,252,79,252,cell_shootable,1;
	setcell "que_qsch01",99,252,99,255,cell_walkable,1;
	setcell "que_qsch01",99,252,99,255,cell_shootable,1;
	setcell "que_qsch01",53,242,53,245,cell_walkable,1;
	setcell "que_qsch01",53,242,53,245,cell_shootable,1;
	end;

OnMyMobDead:
	end;
}

que_qsch01,2,3,0	script	#miro_yf_sch01	844,{

OnEnable:
	monster "que_qsch01",44,292," ",1936,1,"#miro_yf_sch01::OnMyMobDead";
	monster "que_qsch01",46,292," ",1936,1,"#miro_yf_sch01::OnMyMobDead";
	monster "que_qsch01",67,295," ",1936,1,"#miro_yf_sch01::OnMyMobDead";
	monster "que_qsch01",67,293," ",1936,1,"#miro_yf_sch01::OnMyMobDead";
	monster "que_qsch01",94,301," ",1936,1,"#miro_yf_sch01::OnMyMobDead";
	monster "que_qsch01",94,299," ",1936,1,"#miro_yf_sch01::OnMyMobDead";
	monster "que_qsch01",79,289," ",1936,1,"#miro_yf_sch01::OnMyMobDead";
	monster "que_qsch01",79,287," ",1936,1,"#miro_yf_sch01::OnMyMobDead";
	monster "que_qsch01",56,282," ",1936,1,"#miro_yf_sch01::OnMyMobDead";
	monster "que_qsch01",58,282," ",1936,1,"#miro_yf_sch01::OnMyMobDead";
	monster "que_qsch01",71,283," ",1936,1,"#miro_yf_sch01::OnMyMobDead";
	monster "que_qsch01",71,281," ",1936,1,"#miro_yf_sch01::OnMyMobDead";
	monster "que_qsch01",100,281," ",1936,1,"#miro_yf_sch01::OnMyMobDead";
	monster "que_qsch01",102,281," ",1936,1,"#miro_yf_sch01::OnMyMobDead";
	monster "que_qsch01",44,261," ",1936,1,"#miro_yf_sch01::OnMyMobDead";
	monster "que_qsch01",46,261," ",1936,1,"#miro_yf_sch01::OnMyMobDead";
	monster "que_qsch01",50,265," ",1936,1,"#miro_yf_sch01::OnMyMobDead";
	monster "que_qsch01",52,265," ",1936,1,"#miro_yf_sch01::OnMyMobDead";
	monster "que_qsch01",56,270," ",1936,1,"#miro_yf_sch01::OnMyMobDead";
	monster "que_qsch01",58,270," ",1936,1,"#miro_yf_sch01::OnMyMobDead";
	monster "que_qsch01",72,278," ",1936,1,"#miro_yf_sch01::OnMyMobDead";
	monster "que_qsch01",73,278," ",1936,1,"#miro_yf_sch01::OnMyMobDead";
	monster "que_qsch01",82,266," ",1936,1,"#miro_yf_sch01::OnMyMobDead";
	monster "que_qsch01",84,266," ",1936,1,"#miro_yf_sch01::OnMyMobDead";
	monster "que_qsch01",88,266," ",1936,1,"#miro_yf_sch01::OnMyMobDead";
	monster "que_qsch01",90,266," ",1936,1,"#miro_yf_sch01::OnMyMobDead";
	monster "que_qsch01",94,271," ",1936,1,"#miro_yf_sch01::OnMyMobDead";
	monster "que_qsch01",96,271," ",1936,1,"#miro_yf_sch01::OnMyMobDead";
	monster "que_qsch01",60,257," ",1936,1,"#miro_yf_sch01::OnMyMobDead";
	monster "que_qsch01",60,255," ",1936,1,"#miro_yf_sch01::OnMyMobDead";
	monster "que_qsch01",73,263," ",1936,1,"#miro_yf_sch01::OnMyMobDead";
	monster "que_qsch01",73,261," ",1936,1,"#miro_yf_sch01::OnMyMobDead";
	monster "que_qsch01",75,257," ",1936,1,"#miro_yf_sch01::OnMyMobDead";
	monster "que_qsch01",75,255," ",1936,1,"#miro_yf_sch01::OnMyMobDead";
	monster "que_qsch01",87,257," ",1936,1,"#miro_yf_sch01::OnMyMobDead";
	monster "que_qsch01",87,255," ",1936,1,"#miro_yf_sch01::OnMyMobDead";
	monster "que_qsch01",58,251," ",1936,1,"#miro_yf_sch01::OnMyMobDead";
	monster "que_qsch01",58,249," ",1936,1,"#miro_yf_sch01::OnMyMobDead";
	monster "que_qsch01",80,251," ",1936,1,"#miro_yf_sch01::OnMyMobDead";
	monster "que_qsch01",80,249," ",1936,1,"#miro_yf_sch01::OnMyMobDead";
	monster "que_qsch01",53,245," ",1936,1,"#miro_yf_sch01::OnMyMobDead";
	monster "que_qsch01",53,243," ",1936,1,"#miro_yf_sch01::OnMyMobDead";
	monster "que_qsch01",75,245," ",1936,1,"#miro_yf_sch01::OnMyMobDead";
	monster "que_qsch01",75,243," ",1936,1,"#miro_yf_sch01::OnMyMobDead";
	monster "que_qsch01",100,251," ",1936,1,"#miro_yf_sch01::OnMyMobDead";
	monster "que_qsch01",102,251," ",1936,1,"#miro_yf_sch01::OnMyMobDead";
	monster "que_qsch01",100,256," ",1936,1,"#miro_yf_sch01::OnMyMobDead";
	monster "que_qsch01",102,256," ",1936,1,"#miro_yf_sch01::OnMyMobDead";
	setcell "que_qsch01",44,292,47,292,cell_walkable,0;
	setcell "que_qsch01",44,292,47,292,cell_shootable,0;
	setcell "que_qsch01",67,292,67,295,cell_walkable,0;
	setcell "que_qsch01",67,292,67,295,cell_shootable,0;
	setcell "que_qsch01",94,298,94,301,cell_walkable,0;
	setcell "que_qsch01",94,298,94,301,cell_shootable,0;
	setcell "que_qsch01",79,286,79,289,cell_walkable,0;
	setcell "que_qsch01",79,286,79,289,cell_shootable,0;
	setcell "que_qsch01",56,282,59,282,cell_walkable,0;
	setcell "que_qsch01",56,282,59,282,cell_shootable,0;
	setcell "que_qsch01",71,280,71,283,cell_walkable,0;
	setcell "que_qsch01",71,280,71,283,cell_shootable,0;
	setcell "que_qsch01",100,281,103,281,cell_walkable,0;
	setcell "que_qsch01",100,281,103,281,cell_shootable,0;
	setcell "que_qsch01",44,261,47,261,cell_walkable,0;
	setcell "que_qsch01",44,261,47,261,cell_shootable,0;
	setcell "que_qsch01",50,265,53,265,cell_walkable,0;
	setcell "que_qsch01",50,265,53,265,cell_shootable,0;
	setcell "que_qsch01",56,270,59,270,cell_walkable,0;
	setcell "que_qsch01",56,270,59,270,cell_shootable,0;
	setcell "que_qsch01",72,278,73,278,cell_walkable,0;
	setcell "que_qsch01",72,278,73,278,cell_shootable,0;
	setcell "que_qsch01",82,266,85,266,cell_walkable,0;
	setcell "que_qsch01",82,266,85,266,cell_shootable,0;
	setcell "que_qsch01",88,266,91,266,cell_walkable,0;
	setcell "que_qsch01",88,266,91,266,cell_shootable,0;
	setcell "que_qsch01",94,271,97,271,cell_walkable,0;
	setcell "que_qsch01",94,271,97,271,cell_shootable,0;
	setcell "que_qsch01",60,254,60,257,cell_walkable,0;
	setcell "que_qsch01",60,254,60,257,cell_shootable,0;
	setcell "que_qsch01",73,260,73,263,cell_walkable,0;
	setcell "que_qsch01",73,260,73,263,cell_shootable,0;
	setcell "que_qsch01",75,254,75,257,cell_walkable,0;
	setcell "que_qsch01",75,254,75,257,cell_shootable,0;
	setcell "que_qsch01",87,254,87,257,cell_walkable,0;
	setcell "que_qsch01",87,254,87,257,cell_shootable,0;
	setcell "que_qsch01",58,248,58,251,cell_walkable,0;
	setcell "que_qsch01",58,248,58,251,cell_shootable,0;
	setcell "que_qsch01",80,248,80,251,cell_walkable,0;
	setcell "que_qsch01",80,248,80,251,cell_shootable,0;
	setcell "que_qsch01",53,242,53,245,cell_walkable,0;
	setcell "que_qsch01",53,242,53,245,cell_shootable,0;
	setcell "que_qsch01",75,242,75,245,cell_walkable,0;
	setcell "que_qsch01",75,242,75,245,cell_shootable,0;
	setcell "que_qsch01",100,251,103,251,cell_walkable,0;
	setcell "que_qsch01",100,251,103,251,cell_shootable,0;
	setcell "que_qsch01",100,256,103,256,cell_walkable,0;
	setcell "que_qsch01",100,256,103,256,cell_shootable,0;
	end;

OnDisable:
	killmonster "que_qsch01","#miro_yf_sch01::OnMyMobDead";
	setcell "que_qsch01",44,292,47,292,cell_walkable,1;
	setcell "que_qsch01",44,292,47,292,cell_shootable,1;
	setcell "que_qsch01",67,292,67,295,cell_walkable,1;
	setcell "que_qsch01",67,292,67,295,cell_shootable,1;
	setcell "que_qsch01",94,298,94,301,cell_walkable,1;
	setcell "que_qsch01",94,298,94,301,cell_shootable,1;
	setcell "que_qsch01",79,286,79,289,cell_walkable,1;
	setcell "que_qsch01",79,286,79,289,cell_shootable,1;
	setcell "que_qsch01",56,282,59,282,cell_walkable,1;
	setcell "que_qsch01",56,282,59,282,cell_shootable,1;
	setcell "que_qsch01",71,280,71,283,cell_walkable,1;
	setcell "que_qsch01",71,280,71,283,cell_shootable,1;
	setcell "que_qsch01",100,281,103,281,cell_walkable,1;
	setcell "que_qsch01",100,281,103,281,cell_shootable,1;
	setcell "que_qsch01",44,261,47,261,cell_walkable,1;
	setcell "que_qsch01",44,261,47,261,cell_shootable,1;
	setcell "que_qsch01",50,265,53,265,cell_walkable,1;
	setcell "que_qsch01",50,265,53,265,cell_shootable,1;
	setcell "que_qsch01",56,270,59,270,cell_walkable,1;
	setcell "que_qsch01",56,270,59,270,cell_shootable,1;
	setcell "que_qsch01",72,278,73,278,cell_walkable,1;
	setcell "que_qsch01",72,278,73,278,cell_shootable,1;
	setcell "que_qsch01",82,266,85,266,cell_walkable,1;
	setcell "que_qsch01",82,266,85,266,cell_shootable,1;
	setcell "que_qsch01",88,266,91,266,cell_walkable,1;
	setcell "que_qsch01",88,266,91,266,cell_shootable,1;
	setcell "que_qsch01",94,271,97,271,cell_walkable,1;
	setcell "que_qsch01",94,271,97,271,cell_shootable,1;
	setcell "que_qsch01",60,254,60,257,cell_walkable,1;
	setcell "que_qsch01",60,254,60,257,cell_shootable,1;
	setcell "que_qsch01",73,260,73,263,cell_walkable,1;
	setcell "que_qsch01",73,260,73,263,cell_shootable,1;
	setcell "que_qsch01",75,254,75,257,cell_walkable,1;
	setcell "que_qsch01",75,254,75,257,cell_shootable,1;
	setcell "que_qsch01",87,254,87,257,cell_walkable,1;
	setcell "que_qsch01",87,254,87,257,cell_shootable,1;
	setcell "que_qsch01",58,248,58,251,cell_walkable,1;
	setcell "que_qsch01",58,248,58,251,cell_shootable,1;
	setcell "que_qsch01",80,248,80,251,cell_walkable,1;
	setcell "que_qsch01",80,248,80,251,cell_shootable,1;
	setcell "que_qsch01",53,242,53,245,cell_walkable,1;
	setcell "que_qsch01",53,242,53,245,cell_shootable,1;
	setcell "que_qsch01",75,242,75,245,cell_walkable,1;
	setcell "que_qsch01",75,242,75,245,cell_shootable,1;
	setcell "que_qsch01",100,251,103,251,cell_walkable,1;
	setcell "que_qsch01",100,251,103,251,cell_shootable,1;
	setcell "que_qsch01",100,256,103,256,cell_walkable,1;
	setcell "que_qsch01",100,256,103,256,cell_shootable,1;
	end;

OnMyMobDead:
	end;
}

que_qsch01,132,172,0	script	windpath01_sch01	45,1,1,{
OnTouch:
	if (countitem(7839) > 0) {
		mes "传送大门被水晶钥匙开启了.";
		delitem 7839,1; //水晶钥匙
		close2;
		warp "que_qsch01",114,158;
		end;
	}
	else {
		mes "你需要用水晶钥匙来激活传送大门.";
		close;
	}
}

que_qsch01,113,165,0	warp	windpath02_sch01	1,1,que_qsch01,139,172


que_qsch01,131,136,3	script	碧亚玫特#sch01	1930,{
OnInit:
	enablenpc "碧亚玫特#sch01";
	end;
}

que_qsch01,114,158,0	script	#event_start01_sch01	-1,1,1,{

OnInit:
	disablenpc "#event_start01_sch01";
	end;

OnEnable:
	enablenpc "#event_start01_sch01";
	end;

OnDisable:
	disablenpc "#event_start01_sch01";
	stopnpctimer;
	end;

OnTouch:
	initnpctimer;
	disablenpc "#event_start01_sch01";
	end;

OnTimer2000:
	mapannounce "que_qsch01","碧亚玫特嘀咕着: ... 六只, 嗯. 但是....",bc_map,"0xdb7093";
	end;

OnTimer6000:
	mapannounce "que_qsch01","碧亚玫特嘀咕着: ... 嗯... 啊. 鸟儿们都吓得后退了呢... 是谁要逃走了呢...? 那些伪装自己的冒险者呢?",bc_map,"0xdb7093";
	end;

OnTimer10000:
	mapannounce "que_qsch01","碧亚玫特嘀咕着: 哈! 被关在笼子里了吧.",bc_map,"0xdb7093";
	end;

OnTimer14000:
	mapannounce "que_qsch01","碧亚玫特: 去吧, 抓住那些鸟儿! 把他们关在笼子里!",bc_map,"0x00ff00";
	donpcevent "#gdtimer01_sch01::OnEnable";
	stopnpctimer;
	end;
}

que_qsch01,2,2,0	script	#gdtimer01_sch01	844,{

OnEnable:
	initnpctimer;
	end;

Onstop:
	donpcevent "#getspell01_sch01::OnDisable";
	donpcevent "#getspell02_sch01::OnDisable";
	donpcevent "#getspell03_sch01::OnDisable";
	donpcevent "#getspell04_sch01::OnDisable";
	donpcevent "#getspell05_sch01::OnDisable";
	donpcevent "#getspell06_sch01::OnDisable";
	donpcevent "#getspell07_sch01::OnDisable";
	donpcevent "#getspell08_sch01::OnDisable";
	stopnpctimer;
	end;

OnTimer1000:
	donpcevent "#getspell08_sch01::OnDisable";
	donpcevent "#getspell01_sch01::OnEnable";
	end;

OnTimer10000:
	donpcevent "#getspell01_sch01::OnDisable";
	donpcevent "#getspell02_sch01::OnEnable";
	end;

OnTimer20000:
	donpcevent "#getspell02_sch01::OnDisable";
	donpcevent "#getspell03_sch01::OnEnable";
	end;

OnTimer30000:
	donpcevent "#getspell03_sch01::OnDisable";
	donpcevent "#getspell04_sch01::OnEnable";
	end;

OnTimer40000:
	donpcevent "#getspell04_sch01::OnDisable";
	donpcevent "#getspell05_sch01::OnEnable";
	end;

OnTimer50000:
	donpcevent "#getspell05_sch01::OnDisable";
	donpcevent "#getspell06_sch01::OnEnable";
	end;

OnTimer60000:
	donpcevent "#getspell06_sch01::OnDisable";
	donpcevent "#getspell07_sch01::OnEnable";
	end;

OnTimer70000:
	donpcevent "#getspell07_sch01::OnDisable";
	donpcevent "#getspell08_sch01::OnEnable";
	end;

OnTimer75000:
	if ($gqse_sch01_gd < 6) {
		mapannounce "que_qsch01","碧亚玫特: 愚蠢的鸟儿们! 愚蠢的人类! 你们摧毁不了我的笼子吧?!",bc_map,"0x00ff00";
		enablenpc "#sch01_cage01";
		enablenpc "#sch01_cage02";
		enablenpc "#sch01_cage03";
		enablenpc "#sch01_cage04";
		enablenpc "#sch01_cage05";
		enablenpc "#sch01_cage06";
		set $gqse_sch01_gd,0;
	}
	end;

OnTimer76000:
	disablenpc "#sch01_cage01";
	disablenpc "#sch01_cage02";
	disablenpc "#sch01_cage03";
	disablenpc "#sch01_cage04";
	disablenpc "#sch01_cage05";
	disablenpc "#sch01_cage06";
	end;

OnTimer80000:
	donpcevent "#gdtimer01_sch01::OnEnable";
	end;
}

que_qsch01,2,3,0	script	#gdtimer02_sch01	844,{

OnEnable:
	initnpctimer;
	end;

Onstop:
	stopnpctimer;
	killmonster "que_qsch01","#gdtimer02_sch01::OnMyMobDead";
	end;

OnTimer4000:
	mapannounce "que_qsch01","碧亚玫特: 把他们都抓住!",bc_map,"0xdb7093";
	end;

OnTimer8000:
	mapannounce "que_qsch01","碧亚玫特: 召唤出钥匙之石来锁住这些笼子吧, 叫你们插翅也难飞.",bc_map,"0xdb7093";
	end;

OnTimer12000:
	mapannounce "que_qsch01","碧亚玫特: 钥匙之石可以帮我们牢牢保护我的笼子.",bc_map,"0xdb7093";
	monster "que_qsch01",108,151,"钥匙之石",1905,1,"#gdtimer02_sch01::OnMyMobDead";
	monster "que_qsch01",109,135,"钥匙之石",1905,1,"#gdtimer02_sch01::OnMyMobDead";
	monster "que_qsch01",115,116,"钥匙之石",1905,1,"#gdtimer02_sch01::OnMyMobDead";
	monster "que_qsch01",158,106,"钥匙之石",1905,1,"#gdtimer02_sch01::OnMyMobDead";
	monster "que_qsch01",163,133,"钥匙之石",1905,1,"#gdtimer02_sch01::OnMyMobDead";
	monster "que_qsch01",150,154,"钥匙之石",1905,1,"#gdtimer02_sch01::OnMyMobDead";
	end;

OnTimer112000:
	mapannounce "que_qsch01","碧亚玫特: 快乐时光又回来了! 现在, 来吧! 我要回去了!!",bc_map,"0xdb7093";
	killmonster "que_qsch01","#gdtimer02_sch01::OnMyMobDead";
	enablenpc "#sch01_cage01";
	enablenpc "#sch01_cage02";
	enablenpc "#sch01_cage03";
	enablenpc "#sch01_cage04";
	enablenpc "#sch01_cage05";
	enablenpc "#sch01_cage06";
	set $gqse_sch01_gd,0;
	end;

OnTimer113000:
	disablenpc "#sch01_cage01";
	disablenpc "#sch01_cage02";
	disablenpc "#sch01_cage03";
	disablenpc "#sch01_cage04";
	disablenpc "#sch01_cage05";
	disablenpc "#sch01_cage06";
	donpcevent "#gdtimer01_sch01::OnEnable";
	stopnpctimer;
	end;

Onreset:
	killmonster "que_qsch01","#gdtimer02_sch01::OnMyMobDead";
	end;

OnMyMobDead:
	if (mobcount("que_qsch01","#gdtimer02_sch01::OnMyMobDead") == 0) {
		enablenpc "#sch01_cage01";
		enablenpc "#sch01_cage02";
		enablenpc "#sch01_cage03";
		enablenpc "#sch01_cage04";
		enablenpc "#sch01_cage05";
		enablenpc "#sch01_cage06";
		donpcevent "#piamette_sch01::OnEnable";
		stopnpctimer;
	}
	end;
}

que_qsch01,1,4,0	script	#piamette_sch01	844,{
OnEnable:
	initnpctimer;
	end;

Onreset:
	killmonster "que_qsch01","#piamette_sch01::OnMyMobDead";
	stopnpctimer;
	end;

OnTimer1000:
	mapannounce "que_qsch01","碧亚玫特: 所有钥匙之石都被击碎了? 谁放走了我的鸟儿? 啊, 到底是谁做的?",bc_map,"0xdb7093";
	end;

OnTimer5000:
	mapannounce "que_qsch01","碧亚玫特: 我生气了!",bc_map,"0xdb7093";
	disablenpc "碧亚玫特#sch01";
	monster "que_qsch01",131,135,"愤怒的碧亚玫特",1930,1,"#piamette_sch01::OnMyMobDead";
	stopnpctimer;
	end;

OnMyMobDead:
	mapannounce "que_qsch01","碧亚玫特被打败了, 南边的传送大门被开启了.",bc_map,"0x00ff00";
	enablenpc "windpath03_sch01";
	enablenpc "windpath04_sch01";
	donpcevent "#nm_switch_sch01::OnEnable";
	end;
}

que_qsch01,113,135,0	script	#getspell01_sch01	-1,1,1,{
OnInit:
	disablenpc "#getspell01_sch01";
	end;

OnEnable:
	enablenpc "#getspell01_sch01";
	specialeffect EF_LOCKON;
	end;

OnDisable:
	disablenpc "#getspell01_sch01";
	end;

OnTouch:
	sc_start2 SC_Stone,300000,0,10000;
	if ($gqse_sch01_gd == 0) {
		warp "que_qsch01",103,153;
		disablenpc "#getspell01_sch01";
		set $gqse_sch01_gd,1;
		mapannounce "que_qsch01","碧亚玫特: 击中一只白色的鸟儿, 被箭矢刺穿了翅膀.",bc_map,"0xdb7093";
	}
	else if ($gqse_sch01_gd == 1) {
		warp "que_qsch01",102,135;
		disablenpc "#getspell01_sch01";
		set $gqse_sch01_gd,2;
		mapannounce "que_qsch01","碧亚玫特: 一只鸟儿掉进了陷阱里, 又跌进了湖里.",bc_map,"0xdb7093";
	}
	else if ($gqse_sch01_gd == 2) {
		warp "que_qsch01",113,111;
		disablenpc "#getspell01_sch01";
		set $gqse_sch01_gd,3;
		mapannounce "que_qsch01","碧亚玫特: 一只被笼子困住的鸟儿已经死了.",bc_map,"0xdb7093";
	}
	else if ($gqse_sch01_gd == 3) {
		warp "que_qsch01",161,105;
		disablenpc "#getspell01_sch01";
		set $gqse_sch01_gd,4;
		mapannounce "que_qsch01","碧亚玫特: 又毒死了一只鸟儿.",bc_map,"0xdb7093";
	}
	else if ($gqse_sch01_gd == 4) {
		warp "que_qsch01",168,135;
		disablenpc "#getspell01_sch01";
		set $gqse_sch01_gd,5;
		mapannounce "que_qsch01","碧亚玫特: 一只唱了七天七夜的鸟儿终于吐血身亡了.",bc_map,"0xdb7093";
	}
	else if ($gqse_sch01_gd == 5) {
		warp "que_qsch01",150,159;
		disablenpc "#getspell01_sch01";
		set $gqse_sch01_gd,6;
		mapannounce "que_qsch01","碧亚玫特: 一只鸟竟然被自己的蛋壳弄折了脖子!",bc_map,"0xFF0000";
		donpcevent "#gdtimer02_sch01::OnEnable";
		donpcevent "#gdtimer01_sch01::Onstop";
	}
	end;
}

que_qsch01,146,150,0	script	#getspell02_sch01	-1,1,1,{
OnInit:
	disablenpc "#getspell02_sch01";
	end;

OnEnable:
	enablenpc "#getspell02_sch01";
	specialeffect EF_LOCKON;
	end;

OnDisable:
	disablenpc "#getspell02_sch01";
	end;

OnTouch:
	sc_start2 SC_Stone,300000,0,10000;
	if ($gqse_sch01_gd == 0) {
		warp "que_qsch01",103,153;
		disablenpc "#getspell01_sch01";
		set $gqse_sch01_gd,1;
		mapannounce "que_qsch01","碧亚玫特: 击中一只白色的鸟儿, 被箭矢刺穿了翅膀.",bc_map,"0xdb7093";
	}
	else if ($gqse_sch01_gd == 1) {
		warp "que_qsch01",102,135;
		disablenpc "#getspell01_sch01";
		set $gqse_sch01_gd,2;
		mapannounce "que_qsch01","碧亚玫特: 一只鸟儿掉进了陷阱里, 又跌进了湖里.",bc_map,"0xdb7093";
	}
	else if ($gqse_sch01_gd == 2) {
		warp "que_qsch01",113,111;
		disablenpc "#getspell01_sch01";
		set $gqse_sch01_gd,3;
		mapannounce "que_qsch01","碧亚玫特: 一只被笼子困住的鸟儿已经死了.",bc_map,"0xdb7093";
	}
	else if ($gqse_sch01_gd == 3) {
		warp "que_qsch01",161,105;
		disablenpc "#getspell01_sch01";
		set $gqse_sch01_gd,4;
		mapannounce "que_qsch01","碧亚玫特: 又毒死了一只鸟儿.",bc_map,"0xdb7093";
	}
	else if ($gqse_sch01_gd == 4) {
		warp "que_qsch01",168,135;
		disablenpc "#getspell01_sch01";
		set $gqse_sch01_gd,5;
		mapannounce "que_qsch01","碧亚玫特: 一只唱了七天七夜的鸟儿终于吐血身亡了.",bc_map,"0xdb7093";
	}
	else if ($gqse_sch01_gd == 5) {
		warp "que_qsch01",150,159;
		disablenpc "#getspell01_sch01";
		set $gqse_sch01_gd,6;
		mapannounce "que_qsch01","碧亚玫特: 一只鸟竟然被自己的蛋壳弄折了脖子!",bc_map,"0xFF0000";
		donpcevent "#gdtimer02_sch01::OnEnable";
		donpcevent "#gdtimer01_sch01::Onstop";
	}
	end;
}

que_qsch01,131,117,0	script	#getspell03_sch01	-1,1,1,{
OnInit:
	disablenpc "#getspell03_sch01";
	end;

OnEnable:
	enablenpc "#getspell03_sch01";
	specialeffect EF_LOCKON;
	end;

OnDisable:
	disablenpc "#getspell03_sch01";
	end;

OnTouch:
	sc_start2 SC_Stone,300000,0,10000;
	if ($gqse_sch01_gd == 0) {
		warp "que_qsch01",103,153;
		disablenpc "#getspell01_sch01";
		set $gqse_sch01_gd,1;
		mapannounce "que_qsch01","碧亚玫特: 击中一只白色的鸟儿, 被箭矢刺穿了翅膀.",bc_map,"0xdb7093";
	}
	else if ($gqse_sch01_gd == 1) {
		warp "que_qsch01",102,135;
		disablenpc "#getspell01_sch01";
		set $gqse_sch01_gd,2;
		mapannounce "que_qsch01","碧亚玫特: 一只鸟儿掉进了陷阱里, 又跌进了湖里.",bc_map,"0xdb7093";
	}
	else if ($gqse_sch01_gd == 2) {
		warp "que_qsch01",113,111;
		disablenpc "#getspell01_sch01";
		set $gqse_sch01_gd,3;
		mapannounce "que_qsch01","碧亚玫特: 一只被笼子困住的鸟儿已经死了.",bc_map,"0xdb7093";
	}
	else if ($gqse_sch01_gd == 3) {
		warp "que_qsch01",161,105;
		disablenpc "#getspell01_sch01";
		set $gqse_sch01_gd,4;
		mapannounce "que_qsch01","碧亚玫特: 又毒死了一只鸟儿.",bc_map,"0xdb7093";
	}
	else if ($gqse_sch01_gd == 4) {
		warp "que_qsch01",168,135;
		disablenpc "#getspell01_sch01";
		set $gqse_sch01_gd,5;
		mapannounce "que_qsch01","碧亚玫特: 一只唱了七天七夜的鸟儿终于吐血身亡了.",bc_map,"0xdb7093";
	}
	else if ($gqse_sch01_gd == 5) {
		warp "que_qsch01",150,159;
		disablenpc "#getspell01_sch01";
		set $gqse_sch01_gd,6;
		mapannounce "que_qsch01","碧亚玫特: 一只鸟竟然被自己的蛋壳弄折了脖子!",bc_map,"0xFF0000";
		donpcevent "#gdtimer02_sch01::OnEnable";
		donpcevent "#gdtimer01_sch01::Onstop";
	}
	end;
}

que_qsch01,117,150,0	script	#getspell04_sch01	-1,1,1,{
OnInit:
	disablenpc "#getspell04_sch01";
	end;

OnEnable:
	enablenpc "#getspell04_sch01";
	specialeffect EF_LOCKON;
	end;

OnDisable:
	disablenpc "#getspell04_sch01";
	end;

OnTouch:
	sc_start2 SC_Stone,300000,0,10000;
	if ($gqse_sch01_gd == 0) {
		warp "que_qsch01",103,153;
		disablenpc "#getspell01_sch01";
		set $gqse_sch01_gd,1;
		mapannounce "que_qsch01","碧亚玫特: 击中一只白色的鸟儿, 被箭矢刺穿了翅膀.",bc_map,"0xdb7093";
	}
	else if ($gqse_sch01_gd == 1) {
		warp "que_qsch01",102,135;
		disablenpc "#getspell01_sch01";
		set $gqse_sch01_gd,2;
		mapannounce "que_qsch01","碧亚玫特: 一只鸟儿掉进了陷阱里, 又跌进了湖里.",bc_map,"0xdb7093";
	}
	else if ($gqse_sch01_gd == 2) {
		warp "que_qsch01",113,111;
		disablenpc "#getspell01_sch01";
		set $gqse_sch01_gd,3;
		mapannounce "que_qsch01","碧亚玫特: 一只被笼子困住的鸟儿已经死了.",bc_map,"0xdb7093";
	}
	else if ($gqse_sch01_gd == 3) {
		warp "que_qsch01",161,105;
		disablenpc "#getspell01_sch01";
		set $gqse_sch01_gd,4;
		mapannounce "que_qsch01","碧亚玫特: 又毒死了一只鸟儿.",bc_map,"0xdb7093";
	}
	else if ($gqse_sch01_gd == 4) {
		warp "que_qsch01",168,135;
		disablenpc "#getspell01_sch01";
		set $gqse_sch01_gd,5;
		mapannounce "que_qsch01","碧亚玫特: 一只唱了七天七夜的鸟儿终于吐血身亡了.",bc_map,"0xdb7093";
	}
	else if ($gqse_sch01_gd == 5) {
		warp "que_qsch01",150,159;
		disablenpc "#getspell01_sch01";
		set $gqse_sch01_gd,6;
		mapannounce "que_qsch01","碧亚玫特: 一只鸟竟然被自己的蛋壳弄折了脖子!",bc_map,"0xFF0000";
		donpcevent "#gdtimer02_sch01::OnEnable";
		donpcevent "#gdtimer01_sch01::Onstop";
	}
	end;
}

que_qsch01,150,135,0	script	#getspell05_sch01	-1,1,1,{
OnInit:
	disablenpc "#getspell05_sch01";
	end;

OnEnable:
	enablenpc "#getspell05_sch01";
	specialeffect EF_LOCKON;
	end;

OnDisable:
	disablenpc "#getspell05_sch01";
	end;

OnTouch:
	sc_start2 SC_Stone,300000,0,10000;
	if ($gqse_sch01_gd == 0) {
		warp "que_qsch01",103,153;
		disablenpc "#getspell01_sch01";
		set $gqse_sch01_gd,1;
		mapannounce "que_qsch01","碧亚玫特: 击中一只白色的鸟儿, 被箭矢刺穿了翅膀.",bc_map,"0xdb7093";
	}
	else if ($gqse_sch01_gd == 1) {
		warp "que_qsch01",102,135;
		disablenpc "#getspell01_sch01";
		set $gqse_sch01_gd,2;
		mapannounce "que_qsch01","碧亚玫特: 一只鸟儿掉进了陷阱里, 又跌进了湖里.",bc_map,"0xdb7093";
	}
	else if ($gqse_sch01_gd == 2) {
		warp "que_qsch01",113,111;
		disablenpc "#getspell01_sch01";
		set $gqse_sch01_gd,3;
		mapannounce "que_qsch01","碧亚玫特: 一只被笼子困住的鸟儿已经死了.",bc_map,"0xdb7093";
	}
	else if ($gqse_sch01_gd == 3) {
		warp "que_qsch01",161,105;
		disablenpc "#getspell01_sch01";
		set $gqse_sch01_gd,4;
		mapannounce "que_qsch01","碧亚玫特: 又毒死了一只鸟儿.",bc_map,"0xdb7093";
	}
	else if ($gqse_sch01_gd == 4) {
		warp "que_qsch01",168,135;
		disablenpc "#getspell01_sch01";
		set $gqse_sch01_gd,5;
		mapannounce "que_qsch01","碧亚玫特: 一只唱了七天七夜的鸟儿终于吐血身亡了.",bc_map,"0xdb7093";
	}
	else if ($gqse_sch01_gd == 5) {
		warp "que_qsch01",150,159;
		disablenpc "#getspell01_sch01";
		set $gqse_sch01_gd,6;
		mapannounce "que_qsch01","碧亚玫特: 一只鸟竟然被自己的蛋壳弄折了脖子!",bc_map,"0xFF0000";
		donpcevent "#gdtimer02_sch01::OnEnable";
		donpcevent "#gdtimer01_sch01::Onstop";
	}
	end;
}

que_qsch01,117,121,0	script	#getspell06_sch01	-1,1,1,{
OnInit:
	disablenpc "#getspell06_sch01";
	end;

OnEnable:
	enablenpc "#getspell06_sch01";
	specialeffect EF_LOCKON;
	end;

OnDisable:
	disablenpc "#getspell06_sch01";
	end;

OnTouch:
	sc_start2 SC_Stone,300000,0,10000;
	if ($gqse_sch01_gd == 0) {
		warp "que_qsch01",103,153;
		disablenpc "#getspell01_sch01";
		set $gqse_sch01_gd,1;
		mapannounce "que_qsch01","碧亚玫特: 击中一只白色的鸟儿, 被箭矢刺穿了翅膀.",bc_map,"0xdb7093";
	}
	else if ($gqse_sch01_gd == 1) {
		warp "que_qsch01",102,135;
		disablenpc "#getspell01_sch01";
		set $gqse_sch01_gd,2;
		mapannounce "que_qsch01","碧亚玫特: 一只鸟儿掉进了陷阱里, 又跌进了湖里.",bc_map,"0xdb7093";
	}
	else if ($gqse_sch01_gd == 2) {
		warp "que_qsch01",113,111;
		disablenpc "#getspell01_sch01";
		set $gqse_sch01_gd,3;
		mapannounce "que_qsch01","碧亚玫特: 一只被笼子困住的鸟儿已经死了.",bc_map,"0xdb7093";
	}
	else if ($gqse_sch01_gd == 3) {
		warp "que_qsch01",161,105;
		disablenpc "#getspell01_sch01";
		set $gqse_sch01_gd,4;
		mapannounce "que_qsch01","碧亚玫特: 又毒死了一只鸟儿.",bc_map,"0xdb7093";
	}
	else if ($gqse_sch01_gd == 4) {
		warp "que_qsch01",168,135;
		disablenpc "#getspell01_sch01";
		set $gqse_sch01_gd,5;
		mapannounce "que_qsch01","碧亚玫特: 一只唱了七天七夜的鸟儿终于吐血身亡了.",bc_map,"0xdb7093";
	}
	else if ($gqse_sch01_gd == 5) {
		warp "que_qsch01",150,159;
		disablenpc "#getspell01_sch01";
		set $gqse_sch01_gd,6;
		mapannounce "que_qsch01","碧亚玫特: 一只鸟竟然被自己的蛋壳弄折了脖子!",bc_map,"0xFF0000";
		donpcevent "#gdtimer02_sch01::OnEnable";
		donpcevent "#gdtimer01_sch01::Onstop";
	}
	end;
}

que_qsch01,131,154,0	script	#getspell07_sch01	-1,1,1,{
OnInit:
	disablenpc "#getspell07_sch01";
	end;

OnEnable:
	enablenpc "#getspell07_sch01";
	specialeffect EF_LOCKON;
	end;

OnDisable:
	disablenpc "#getspell07_sch01";
	end;

OnTouch:
	sc_start2 SC_Stone,300000,0,10000;
	if ($gqse_sch01_gd == 0) {
		warp "que_qsch01",103,153;
		disablenpc "#getspell01_sch01";
		set $gqse_sch01_gd,1;
		mapannounce "que_qsch01","碧亚玫特: 击中一只白色的鸟儿, 被箭矢刺穿了翅膀.",bc_map,"0xdb7093";
	}
	else if ($gqse_sch01_gd == 1) {
		warp "que_qsch01",102,135;
		disablenpc "#getspell01_sch01";
		set $gqse_sch01_gd,2;
		mapannounce "que_qsch01","碧亚玫特: 一只鸟儿掉进了陷阱里, 又跌进了湖里.",bc_map,"0xdb7093";
	}
	else if ($gqse_sch01_gd == 2) {
		warp "que_qsch01",113,111;
		disablenpc "#getspell01_sch01";
		set $gqse_sch01_gd,3;
		mapannounce "que_qsch01","碧亚玫特: 一只被笼子困住的鸟儿已经死了.",bc_map,"0xdb7093";
	}
	else if ($gqse_sch01_gd == 3) {
		warp "que_qsch01",161,105;
		disablenpc "#getspell01_sch01";
		set $gqse_sch01_gd,4;
		mapannounce "que_qsch01","碧亚玫特: 又毒死了一只鸟儿.",bc_map,"0xdb7093";
	}
	else if ($gqse_sch01_gd == 4) {
		warp "que_qsch01",168,135;
		disablenpc "#getspell01_sch01";
		set $gqse_sch01_gd,5;
		mapannounce "que_qsch01","碧亚玫特: 一只唱了七天七夜的鸟儿终于吐血身亡了.",bc_map,"0xdb7093";
	}
	else if ($gqse_sch01_gd == 5) {
		warp "que_qsch01",150,159;
		disablenpc "#getspell01_sch01";
		set $gqse_sch01_gd,6;
		mapannounce "que_qsch01","碧亚玫特: 一只鸟竟然被自己的蛋壳弄折了脖子!",bc_map,"0xFF0000";
		donpcevent "#gdtimer02_sch01::OnEnable";
		donpcevent "#gdtimer01_sch01::Onstop";
	}
	end;
}

que_qsch01,146,121,0	script	#getspell08_sch01	-1,1,1,{
OnInit:
	disablenpc "#getspell08_sch01";
	end;

OnEnable:
	enablenpc "#getspell08_sch01";
	specialeffect EF_LOCKON;
	end;

OnDisable:
	disablenpc "#getspell08_sch01";
	end;

OnTouch:
	sc_start2 SC_Stone,300000,0,10000;
	if ($gqse_sch01_gd == 0) {
		warp "que_qsch01",103,153;
		disablenpc "#getspell01_sch01";
		set $gqse_sch01_gd,1;
		mapannounce "que_qsch01","碧亚玫特: 击中一只白色的鸟儿, 被箭矢刺穿了翅膀.",bc_map,"0xdb7093";
	}
	else if ($gqse_sch01_gd == 1) {
		warp "que_qsch01",102,135;
		disablenpc "#getspell01_sch01";
		set $gqse_sch01_gd,2;
		mapannounce "que_qsch01","碧亚玫特: 一只鸟儿掉进了陷阱里, 又跌进了湖里.",bc_map,"0xdb7093";
	}
	else if ($gqse_sch01_gd == 2) {
		warp "que_qsch01",113,111;
		disablenpc "#getspell01_sch01";
		set $gqse_sch01_gd,3;
		mapannounce "que_qsch01","碧亚玫特: 一只被笼子困住的鸟儿已经死了.",bc_map,"0xdb7093";
	}
	else if ($gqse_sch01_gd == 3) {
		warp "que_qsch01",161,105;
		disablenpc "#getspell01_sch01";
		set $gqse_sch01_gd,4;
		mapannounce "que_qsch01","碧亚玫特: 又毒死了一只鸟儿.",bc_map,"0xdb7093";
	}
	else if ($gqse_sch01_gd == 4) {
		warp "que_qsch01",168,135;
		disablenpc "#getspell01_sch01";
		set $gqse_sch01_gd,5;
		mapannounce "que_qsch01","碧亚玫特: 一只唱了七天七夜的鸟儿终于吐血身亡了.",bc_map,"0xdb7093";
	}
	else if ($gqse_sch01_gd == 5) {
		warp "que_qsch01",150,159;
		disablenpc "#getspell01_sch01";
		set $gqse_sch01_gd,6;
		mapannounce "que_qsch01","碧亚玫特: 一只鸟竟然被自己的蛋壳弄折了脖子!",bc_map,"0xFF0000";
		donpcevent "#gdtimer02_sch01::OnEnable";
		donpcevent "#gdtimer01_sch01::Onstop";
	}
	end;
}

que_qsch01,103,153,0	script	#sch01_cage01	-1,1,1,{
OnInit:
	disablenpc "#sch01_cage01";
	end;

OnTouch:
	sc_end SC_Stone;
	warp "que_qsch01",108,151;
	disablenpc "#sch01_cage01";
	end;
}

que_qsch01,102,135,0	script	#sch01_cage02	-1,1,1,{
OnInit:
	disablenpc "#sch01_cage02";
	end;

OnTouch:
	sc_end SC_Stone;
	warp "que_qsch01",107,135;
	disablenpc "#sch01_cage02";
	end;
}

que_qsch01,113,111,0	script	#sch01_cage03	-1,1,1,{
OnInit:
	disablenpc "#sch01_cage03";
	end;

OnTouch:
	sc_end SC_Stone;
	warp "que_qsch01",113,114;
	disablenpc "#sch01_cage03";
	end;
}

que_qsch01,161,105,0	script	#sch01_cage04	-1,1,1,{
OnInit:
	disablenpc "#sch01_cage04";
	end;

OnTouch:
	sc_end SC_Stone;
	warp "que_qsch01",158,106;
	disablenpc "#sch01_cage04";
	end;
}

que_qsch01,168,135,0	script	#sch01_cage05	-1,1,1,{
OnInit:
	disablenpc "#sch01_cage05";
	end;

OnTouch:
	sc_end SC_Stone;
	warp "que_qsch01",163,133;
	disablenpc "#sch01_cage05";
	end;
}

que_qsch01,150,159,0	script	#sch01_cage06	-1,1,1,{
OnInit:
	disablenpc "#sch01_cage06";
	end;

OnTouch:
	sc_end SC_Stone;
	warp "que_qsch01",150,154;
	disablenpc "#sch01_cage06";
	end;
}

que_qsch01,1,8,0	script	#gd_sch01_mobctrl	844,{
OnEnable:
	monster "que_qsch01",107,152,"碧亚玫特的恒量弹",1738,1,"#gd_sch01_mobctrl::OnMyMobDead";
	monster "que_qsch01",109,135,"碧亚玫特的恒量弹",1738,1,"#gd_sch01_mobctrl::OnMyMobDead";
	monster "que_qsch01",113,116,"碧亚玫特的恒量弹",1738,1,"#gd_sch01_mobctrl::OnMyMobDead";
	monster "que_qsch01",157,107,"碧亚玫特的恒量弹",1738,1,"#gd_sch01_mobctrl::OnMyMobDead";
	monster "que_qsch01",163,133,"碧亚玫特的恒量弹",1738,1,"#gd_sch01_mobctrl::OnMyMobDead";
	monster "que_qsch01",149,156,"碧亚玫特的恒量弹",1738,1,"#gd_sch01_mobctrl::OnMyMobDead";
	monster "que_qsch01",130,139,"爱莉丝",1275,1,"#gd_sch01_mobctrl::OnMyMobDead";
	monster "que_qsch01",135,137,"爱莉丝",1275,1,"#gd_sch01_mobctrl::OnMyMobDead";
	monster "que_qsch01",130,132,"爱莉丝",1275,1,"#gd_sch01_mobctrl::OnMyMobDead";
	monster "que_qsch01",128,137,"爱莉丝",1275,1,"#gd_sch01_mobctrl::OnMyMobDead";
	monster "que_qsch01",109,145,"爱莉丝",1275,1,"#gd_sch01_mobctrl::OnMyMobDead";
	monster "que_qsch01",109,130,"爱莉丝",1275,1,"#gd_sch01_mobctrl::OnMyMobDead";
	monster "que_qsch01",128,114,"爱莉丝",1275,1,"#gd_sch01_mobctrl::OnMyMobDead";
	monster "que_qsch01",147,114,"爱莉丝",1275,1,"#gd_sch01_mobctrl::OnMyMobDead";
	monster "que_qsch01",154,128,"爱莉丝",1275,1,"#gd_sch01_mobctrl::OnMyMobDead";
	monster "que_qsch01",151,145,"爱莉丝",1275,1,"#gd_sch01_mobctrl::OnMyMobDead";
	monster "que_qsch01",130,151,"爱莉丝",1275,1,"#gd_sch01_mobctrl::OnMyMobDead";
	monster "que_qsch01",131,139,"碧亚玫特的恒量弹",1738,1,"#gd_sch01_mobctrl::OnMyMobDead";
	monster "que_qsch01",135,136,"碧亚玫特的恒量弹",1738,1,"#gd_sch01_mobctrl::OnMyMobDead";
	monster "que_qsch01",131,132,"碧亚玫特的恒量弹",1738,1,"#gd_sch01_mobctrl::OnMyMobDead";
	monster "que_qsch01",128,136,"碧亚玫特的恒量弹",1738,1,"#gd_sch01_mobctrl::OnMyMobDead";
	monster "que_qsch01",110,145,"碧亚玫特的恒量弹",1738,1,"#gd_sch01_mobctrl::OnMyMobDead";
	monster "que_qsch01",129,114,"碧亚玫特的恒量弹",1738,1,"#gd_sch01_mobctrl::OnMyMobDead";
	monster "que_qsch01",148,114,"碧亚玫特的恒量弹",1738,1,"#gd_sch01_mobctrl::OnMyMobDead";
	monster "que_qsch01",155,128,"碧亚玫特的恒量弹",1738,1,"#gd_sch01_mobctrl::OnMyMobDead";
	monster "que_qsch01",152,145,"碧亚玫特的恒量弹",1738,1,"#gd_sch01_mobctrl::OnMyMobDead";
	monster "que_qsch01",131,151,"碧亚玫特的恒量弹",1738,1,"#gd_sch01_mobctrl::OnMyMobDead";
	monster "que_qsch01",110,130,"碧亚玫特的恒量弹",1738,1,"#gd_sch01_mobctrl::OnMyMobDead";
	monster "que_qsch01",132,139,"薇欧莉",1390,1,"#gd_sch01_mobctrl::OnMyMobDead";
	monster "que_qsch01",135,135,"薇欧莉",1390,1,"#gd_sch01_mobctrl::OnMyMobDead";
	monster "que_qsch01",132,132,"薇欧莉",1390,1,"#gd_sch01_mobctrl::OnMyMobDead";
	monster "que_qsch01",128,135,"薇欧莉",1390,1,"#gd_sch01_mobctrl::OnMyMobDead";
	monster "que_qsch01",111,145,"薇欧莉",1390,1,"#gd_sch01_mobctrl::OnMyMobDead";
	monster "que_qsch01",111,130,"薇欧莉",1390,1,"#gd_sch01_mobctrl::OnMyMobDead";
	monster "que_qsch01",130,114,"薇欧莉",1390,1,"#gd_sch01_mobctrl::OnMyMobDead";
	monster "que_qsch01",149,114,"薇欧莉",1390,1,"#gd_sch01_mobctrl::OnMyMobDead";
	monster "que_qsch01",156,128,"薇欧莉",1390,1,"#gd_sch01_mobctrl::OnMyMobDead";
	monster "que_qsch01",153,145,"薇欧莉",1390,1,"#gd_sch01_mobctrl::OnMyMobDead";
	monster "que_qsch01",132,151,"薇欧莉",1390,1,"#gd_sch01_mobctrl::OnMyMobDead";
	monster "que_qsch01",133,139,"远古的邪恶箱",1699,1,"#gd_sch01_mobctrl::OnMyMobDead";
	monster "que_qsch01",135,134,"远古的邪恶箱",1699,1,"#gd_sch01_mobctrl::OnMyMobDead";
	monster "que_qsch01",133,132,"远古的邪恶箱",1699,1,"#gd_sch01_mobctrl::OnMyMobDead";
	monster "que_qsch01",128,135,"远古的邪恶箱",1699,1,"#gd_sch01_mobctrl::OnMyMobDead";
	monster "que_qsch01",112,145,"远古的邪恶箱",1699,1,"#gd_sch01_mobctrl::OnMyMobDead";
	monster "que_qsch01",131,114,"远古的邪恶箱",1699,1,"#gd_sch01_mobctrl::OnMyMobDead";
	monster "que_qsch01",150,114,"远古的邪恶箱",1699,1,"#gd_sch01_mobctrl::OnMyMobDead";
	monster "que_qsch01",157,128,"远古的邪恶箱",1699,1,"#gd_sch01_mobctrl::OnMyMobDead";
	monster "que_qsch01",154,145,"远古的邪恶箱",1699,1,"#gd_sch01_mobctrl::OnMyMobDead";
	monster "que_qsch01",133,151,"远古的邪恶箱",1699,1,"#gd_sch01_mobctrl::OnMyMobDead";
	monster "que_qsch01",112,130,"远古的邪恶箱",1699,1,"#gd_sch01_mobctrl::OnMyMobDead";
	end;

Onreset:
	killmonster "que_qsch01","#gd_sch01_mobctrl::OnMyMobDead";
	end;

OnMyMobDead:
	if (mobcount("que_qsch01","#gd_sch01_mobctrl::OnMyMobDead") < 7) {
		monster "que_qsch01",107,152,"碧亚玫特的恒量弹",1738,1,"#gd_sch01_mobctrl::OnMyMobDead";
		monster "que_qsch01",109,135,"碧亚玫特的恒量弹",1738,1,"#gd_sch01_mobctrl::OnMyMobDead";
		monster "que_qsch01",113,116,"碧亚玫特的恒量弹",1738,1,"#gd_sch01_mobctrl::OnMyMobDead";
		monster "que_qsch01",157,107,"碧亚玫特的恒量弹",1738,1,"#gd_sch01_mobctrl::OnMyMobDead";
		monster "que_qsch01",163,133,"碧亚玫特的恒量弹",1738,1,"#gd_sch01_mobctrl::OnMyMobDead";
		monster "que_qsch01",149,156,"碧亚玫特的恒量弹",1738,1,"#gd_sch01_mobctrl::OnMyMobDead";
	}
	end;
}

que_qsch01,149,105,0	script	windpath03_sch01	45,1,1,{
OnInit:
	disablenpc "windpath03_sch01";
	end;

OnTouch:
	warp "que_qsch01",119,103;
	end;
}

que_qsch01,128,104,0	script	windpath04_sch01	45,1,1,{
OnInit:
	disablenpc "windpath04_sch01";
	end;

OnTouch:
	warp "que_qsch01",146,109;
	end;
}

que_qsch01,253,273,0	script	#nm_switch_sch01	-1,5,5,{
OnInit:
	disablenpc "#nm_switch_sch01";
	end;

OnEnable:
	enablenpc "#nm_switch_sch01";
	end;

OnDisable:
	disablenpc "#nm_switch_sch01";
	stopnpctimer;
	end;

OnTouch:
	disablenpc "#nm_switch_sch01";
	initnpctimer;
	end;

OnTimer1000:
	mapannounce "que_qsch01","祈望女神: 和碧亚玫特的美好时光过得如何?",bc_map,"0x00ff00";
	end;

OnTimer4000:
	mapannounce "que_qsch01","祈望女神: 这可还没有结束呢. 不久还会有魔物被召唤出来...",bc_map,"0x00ff00";
	end;

OnTimer9000:
	mapannounce "que_qsch01","祈望女神: 快来我这里寻找安全吧...",bc_map,"0x00ff00";
	end;

OnTimer10000:
	donpcevent "#nmsomsch01_jin01::OnEnable";
	donpcevent "#sch01_stone01::OnEnable";
	end;

OnTimer190000:
	donpcevent "#nmsomsch01_jin02::OnEnable";
	donpcevent "#sch01_stone02::OnEnable";
	end;

OnTimer370000:
	donpcevent "#nmsomsch01_jin03::OnEnable";
	donpcevent "#sch01_stone03::OnEnable";
	stopnpctimer;
	end;
}

que_qsch01,229,297,0	script	#nmsomsch01_jin01	-1,{
OnEnable:
	donpcevent "#sch01_stone01::OnEnable";
	initnpctimer;
	end;

OnDisable:
	killmonster "que_qsch01","#nmsomsch01_jin01::OnMyMobDead";
	stopnpctimer;
	end;

OnTimer5000:
	mapannounce "que_qsch01","西之魔法阵正在召唤影之守护者.",bc_map,"0x4d4dff";
	monster "que_qsch01",226,288,"影之守护者",1752,1,"#nmsomsch01_jin01::OnMyMobDead";
	monster "que_qsch01",227,289,"影之守护者",1752,1,"#nmsomsch01_jin01::OnMyMobDead";
	monster "que_qsch01",228,290,"影之守护者",1752,1,"#nmsomsch01_jin01::OnMyMobDead";
	monster "que_qsch01",229,291,"影之守护者",1752,1,"#nmsomsch01_jin01::OnMyMobDead";
	monster "que_qsch01",230,292,"影之守护者",1752,1,"#nmsomsch01_jin01::OnMyMobDead";
	monster "que_qsch01",231,293,"影之守护者",1752,1,"#nmsomsch01_jin01::OnMyMobDead";
	monster "que_qsch01",232,294,"影之守护者",1752,1,"#nmsomsch01_jin01::OnMyMobDead";
	monster "que_qsch01",233,295,"影之守护者",1752,1,"#nmsomsch01_jin01::OnMyMobDead";
	monster "que_qsch01",234,296,"影之守护者",1752,1,"#nmsomsch01_jin01::OnMyMobDead";
	monster "que_qsch01",235,297,"影之守护者",1752,1,"#nmsomsch01_jin01::OnMyMobDead";
	monster "que_qsch01",228,286,"影之守护者",1752,1,"#nmsomsch01_jin01::OnMyMobDead";
	monster "que_qsch01",229,287,"影之守护者",1752,1,"#nmsomsch01_jin01::OnMyMobDead";
	monster "que_qsch01",230,288,"影之守护者",1752,1,"#nmsomsch01_jin01::OnMyMobDead";
	monster "que_qsch01",231,289,"影之守护者",1752,1,"#nmsomsch01_jin01::OnMyMobDead";
	monster "que_qsch01",232,290,"影之守护者",1752,1,"#nmsomsch01_jin01::OnMyMobDead";
	monster "que_qsch01",233,291,"影之守护者",1752,1,"#nmsomsch01_jin01::OnMyMobDead";
	monster "que_qsch01",234,292,"影之守护者",1752,1,"#nmsomsch01_jin01::OnMyMobDead";
	monster "que_qsch01",235,293,"影之守护者",1752,1,"#nmsomsch01_jin01::OnMyMobDead";
	monster "que_qsch01",236,294,"影之守护者",1752,1,"#nmsomsch01_jin01::OnMyMobDead";
	monster "que_qsch01",237,295,"影之守护者",1752,1,"#nmsomsch01_jin01::OnMyMobDead";
	monster "que_qsch01",230,284,"影之守护者",1752,1,"#nmsomsch01_jin01::OnMyMobDead";
	monster "que_qsch01",231,285,"影之守护者",1752,1,"#nmsomsch01_jin01::OnMyMobDead";
	monster "que_qsch01",232,286,"影之守护者",1752,1,"#nmsomsch01_jin01::OnMyMobDead";
	monster "que_qsch01",233,287,"影之守护者",1752,1,"#nmsomsch01_jin01::OnMyMobDead";
	monster "que_qsch01",234,288,"影之守护者",1752,1,"#nmsomsch01_jin01::OnMyMobDead";
	monster "que_qsch01",235,289,"影之守护者",1752,1,"#nmsomsch01_jin01::OnMyMobDead";
	monster "que_qsch01",236,290,"影之守护者",1752,1,"#nmsomsch01_jin01::OnMyMobDead";
	monster "que_qsch01",237,291,"影之守护者",1752,1,"#nmsomsch01_jin01::OnMyMobDead";
	monster "que_qsch01",238,292,"影之守护者",1752,1,"#nmsomsch01_jin01::OnMyMobDead";
	monster "que_qsch01",239,293,"影之守护者",1752,1,"#nmsomsch01_jin01::OnMyMobDead";
	end;

OnTimer25000:
OnTimer55000:
OnTimer85000:
OnTimer120000:
	monster "que_qsch01",226,294,"影之守护者",1752,1,"#nmsomsch01_jin01::OnMyMobDead";
	monster "que_qsch01",227,294,"影之守护者",1752,1,"#nmsomsch01_jin01::OnMyMobDead";
	monster "que_qsch01",228,294,"影之守护者",1752,1,"#nmsomsch01_jin01::OnMyMobDead";
	monster "que_qsch01",229,294,"影之守护者",1752,1,"#nmsomsch01_jin01::OnMyMobDead";
	monster "que_qsch01",230,295,"影之守护者",1752,1,"#nmsomsch01_jin01::OnMyMobDead";
	monster "que_qsch01",231,296,"影之守护者",1752,1,"#nmsomsch01_jin01::OnMyMobDead";
	monster "que_qsch01",231,297,"影之守护者",1752,1,"#nmsomsch01_jin01::OnMyMobDead";
	monster "que_qsch01",231,298,"影之守护者",1752,1,"#nmsomsch01_jin01::OnMyMobDead";
	monster "que_qsch01",231,299,"影之守护者",1752,1,"#nmsomsch01_jin01::OnMyMobDead";
	monster "que_qsch01",230,300,"影之守护者",1752,1,"#nmsomsch01_jin01::OnMyMobDead";
	monster "que_qsch01",229,301,"影之守护者",1752,1,"#nmsomsch01_jin01::OnMyMobDead";
	monster "que_qsch01",228,301,"影之守护者",1752,1,"#nmsomsch01_jin01::OnMyMobDead";
	monster "que_qsch01",227,301,"影之守护者",1752,1,"#nmsomsch01_jin01::OnMyMobDead";
	monster "que_qsch01",226,301,"影之守护者",1752,1,"#nmsomsch01_jin01::OnMyMobDead";
	monster "que_qsch01",225,300,"影之守护者",1752,1,"#nmsomsch01_jin01::OnMyMobDead";
	monster "que_qsch01",224,299,"影之守护者",1752,1,"#nmsomsch01_jin01::OnMyMobDead";
	monster "que_qsch01",224,298,"影之守护者",1752,1,"#nmsomsch01_jin01::OnMyMobDead";
	monster "que_qsch01",224,297,"影之守护者",1752,1,"#nmsomsch01_jin01::OnMyMobDead";
	monster "que_qsch01",224,296,"影之守护者",1752,1,"#nmsomsch01_jin01::OnMyMobDead";
	monster "que_qsch01",225,295,"影之守护者",1752,1,"#nmsomsch01_jin01::OnMyMobDead";
	end;

OnTimer180000:
	stopnpctimer;
	end;

OnMyMobDead:
	end;
}

que_qsch01,2,8,0	script	#sch01_stone01	844,{
OnEnable:
	monster "que_qsch01",227,294,"西之魔法守护者",1752,1,"#sch01_stone01::OnMyMobDead";
	monster "que_qsch01",229,294,"西之魔法守护者",1752,1,"#sch01_stone01::OnMyMobDead";
	monster "que_qsch01",231,296,"西之魔法守护者",1752,1,"#sch01_stone01::OnMyMobDead";
	monster "que_qsch01",231,298,"西之魔法守护者",1752,1,"#sch01_stone01::OnMyMobDead";
	monster "que_qsch01",230,300,"西之魔法守护者",1752,1,"#sch01_stone01::OnMyMobDead";
	monster "que_qsch01",228,301,"西之魔法守护者",1752,1,"#sch01_stone01::OnMyMobDead";
	monster "que_qsch01",226,301,"西之魔法守护者",1752,1,"#sch01_stone01::OnMyMobDead";
	monster "que_qsch01",224,299,"西之魔法守护者",1752,1,"#sch01_stone01::OnMyMobDead";
	monster "que_qsch01",224,297,"西之魔法守护者",1752,1,"#sch01_stone01::OnMyMobDead";
	monster "que_qsch01",225,295,"西之魔法守护者",1752,1,"#sch01_stone01::OnMyMobDead";
	end;

Onreset:
	killmonster "que_qsch01","#sch01_stone01::OnMyMobDead";
	end;

OnMyMobDead:
	if (mobcount("que_qsch01","#sch01_stone01::OnMyMobDead") == 0) {
		set $gqse_sch01_nm,$gqse_sch01_nm+1;
		donpcevent "#nmsomsch01_jin01::OnDisable";
		if ($gqse_sch01_nm == 3) {
			donpcevent "祈望女神#sch01_boss::Onfight";
		}
	}
	end;
}

que_qsch01,275,299,0	script	#nmsomsch01_jin02	-1,{
OnEnable:
	initnpctimer;
	end;

OnDisable:
	killmonster "que_qsch01","#nmsomsch01_jin02::OnMyMobDead";
	stopnpctimer;
	end;

OnTimer5000:
	mapannounce "que_qsch01","东之魔法阵正在召唤血腥猎魔.",bc_map,"0x4d4dff";
	monster "que_qsch01",263,292,"血腥猎魔",1753,1,"#nmsomsch01_jin02::OnMyMobDead";
	monster "que_qsch01",264,291,"血腥猎魔",1753,1,"#nmsomsch01_jin02::OnMyMobDead";
	monster "que_qsch01",265,290,"血腥猎魔",1753,1,"#nmsomsch01_jin02::OnMyMobDead";
	monster "que_qsch01",266,289,"血腥猎魔",1753,1,"#nmsomsch01_jin02::OnMyMobDead";
	monster "que_qsch01",267,288,"血腥猎魔",1753,1,"#nmsomsch01_jin02::OnMyMobDead";
	monster "que_qsch01",268,287,"血腥猎魔",1753,1,"#nmsomsch01_jin02::OnMyMobDead";
	monster "que_qsch01",269,286,"血腥猎魔",1753,1,"#nmsomsch01_jin02::OnMyMobDead";
	monster "que_qsch01",270,285,"血腥猎魔",1753,1,"#nmsomsch01_jin02::OnMyMobDead";
	monster "que_qsch01",271,284,"血腥猎魔",1753,1,"#nmsomsch01_jin02::OnMyMobDead";
	monster "que_qsch01",272,283,"血腥猎魔",1753,1,"#nmsomsch01_jin02::OnMyMobDead";
	monster "que_qsch01",265,294,"血腥猎魔",1753,1,"#nmsomsch01_jin02::OnMyMobDead";
	monster "que_qsch01",266,293,"血腥猎魔",1753,1,"#nmsomsch01_jin02::OnMyMobDead";
	monster "que_qsch01",267,292,"血腥猎魔",1753,1,"#nmsomsch01_jin02::OnMyMobDead";
	monster "que_qsch01",268,291,"血腥猎魔",1753,1,"#nmsomsch01_jin02::OnMyMobDead";
	monster "que_qsch01",269,290,"血腥猎魔",1753,1,"#nmsomsch01_jin02::OnMyMobDead";
	monster "que_qsch01",270,289,"血腥猎魔",1753,1,"#nmsomsch01_jin02::OnMyMobDead";
	monster "que_qsch01",271,288,"血腥猎魔",1753,1,"#nmsomsch01_jin02::OnMyMobDead";
	monster "que_qsch01",272,287,"血腥猎魔",1753,1,"#nmsomsch01_jin02::OnMyMobDead";
	monster "que_qsch01",273,286,"血腥猎魔",1753,1,"#nmsomsch01_jin02::OnMyMobDead";
	monster "que_qsch01",274,285,"血腥猎魔",1753,1,"#nmsomsch01_jin02::OnMyMobDead";
	monster "que_qsch01",267,296,"血腥猎魔",1753,1,"#nmsomsch01_jin02::OnMyMobDead";
	monster "que_qsch01",268,295,"血腥猎魔",1753,1,"#nmsomsch01_jin02::OnMyMobDead";
	monster "que_qsch01",269,294,"血腥猎魔",1753,1,"#nmsomsch01_jin02::OnMyMobDead";
	monster "que_qsch01",270,283,"血腥猎魔",1753,1,"#nmsomsch01_jin02::OnMyMobDead";
	monster "que_qsch01",271,282,"血腥猎魔",1753,1,"#nmsomsch01_jin02::OnMyMobDead";
	monster "que_qsch01",272,281,"血腥猎魔",1753,1,"#nmsomsch01_jin02::OnMyMobDead";
	monster "que_qsch01",273,280,"血腥猎魔",1753,1,"#nmsomsch01_jin02::OnMyMobDead";
	monster "que_qsch01",274,279,"血腥猎魔",1753,1,"#nmsomsch01_jin02::OnMyMobDead";
	monster "que_qsch01",275,276,"血腥猎魔",1753,1,"#nmsomsch01_jin02::OnMyMobDead";
	monster "que_qsch01",276,275,"血腥猎魔",1753,1,"#nmsomsch01_jin02::OnMyMobDead";
	end;

OnTimer25000:
OnTimer55000:
OnTimer85000:
OnTimer120000:
	monster "que_qsch01",274,301,"血腥猎魔",1753,1,"#nmsomsch01_jin02::OnMyMobDead";
	monster "que_qsch01",275,301,"血腥猎魔",1753,1,"#nmsomsch01_jin02::OnMyMobDead";
	monster "que_qsch01",276,301,"血腥猎魔",1753,1,"#nmsomsch01_jin02::OnMyMobDead";
	monster "que_qsch01",277,301,"血腥猎魔",1753,1,"#nmsomsch01_jin02::OnMyMobDead";
	monster "que_qsch01",278,300,"血腥猎魔",1753,1,"#nmsomsch01_jin02::OnMyMobDead";
	monster "que_qsch01",279,299,"血腥猎魔",1753,1,"#nmsomsch01_jin02::OnMyMobDead";
	monster "que_qsch01",279,298,"血腥猎魔",1753,1,"#nmsomsch01_jin02::OnMyMobDead";
	monster "que_qsch01",279,297,"血腥猎魔",1753,1,"#nmsomsch01_jin02::OnMyMobDead";
	monster "que_qsch01",279,296,"血腥猎魔",1753,1,"#nmsomsch01_jin02::OnMyMobDead";
	monster "que_qsch01",278,295,"血腥猎魔",1753,1,"#nmsomsch01_jin02::OnMyMobDead";
	monster "que_qsch01",277,294,"血腥猎魔",1753,1,"#nmsomsch01_jin02::OnMyMobDead";
	monster "que_qsch01",276,294,"血腥猎魔",1753,1,"#nmsomsch01_jin02::OnMyMobDead";
	monster "que_qsch01",275,294,"血腥猎魔",1753,1,"#nmsomsch01_jin02::OnMyMobDead";
	monster "que_qsch01",274,294,"血腥猎魔",1753,1,"#nmsomsch01_jin02::OnMyMobDead";
	monster "que_qsch01",273,295,"血腥猎魔",1753,1,"#nmsomsch01_jin02::OnMyMobDead";
	monster "que_qsch01",272,296,"血腥猎魔",1753,1,"#nmsomsch01_jin02::OnMyMobDead";
	monster "que_qsch01",272,297,"血腥猎魔",1753,1,"#nmsomsch01_jin02::OnMyMobDead";
	monster "que_qsch01",272,298,"血腥猎魔",1753,1,"#nmsomsch01_jin02::OnMyMobDead";
	monster "que_qsch01",272,299,"血腥猎魔",1753,1,"#nmsomsch01_jin02::OnMyMobDead";
	monster "que_qsch01",273,300,"血腥猎魔",1753,1,"#nmsomsch01_jin02::OnMyMobDead";
	end;

OnTimer180000:
	stopnpctimer;
	end;

OnMyMobDead:
	end;
}

que_qsch01,2,9,0	script	#sch01_stone02	844,{
OnEnable:
	monster "que_qsch01",275,301,"东之魔法守护者",1753,1,"#sch01_stone02::OnMyMobDead";
	monster "que_qsch01",277,301,"东之魔法守护者",1753,1,"#sch01_stone02::OnMyMobDead";
	monster "que_qsch01",279,299,"东之魔法守护者",1753,1,"#sch01_stone02::OnMyMobDead";
	monster "que_qsch01",279,297,"东之魔法守护者",1753,1,"#sch01_stone02::OnMyMobDead";
	monster "que_qsch01",278,295,"东之魔法守护者",1753,1,"#sch01_stone02::OnMyMobDead";
	monster "que_qsch01",276,294,"东之魔法守护者",1753,1,"#sch01_stone02::OnMyMobDead";
	monster "que_qsch01",274,294,"东之魔法守护者",1753,1,"#sch01_stone02::OnMyMobDead";
	monster "que_qsch01",272,296,"东之魔法守护者",1753,1,"#sch01_stone02::OnMyMobDead";
	monster "que_qsch01",272,298,"东之魔法守护者",1753,1,"#sch01_stone02::OnMyMobDead";
	monster "que_qsch01",273,300,"东之魔法守护者",1753,1,"#sch01_stone02::OnMyMobDead";
	end;

Onreset:
	killmonster "que_qsch01","#sch01_stone02::OnMyMobDead";
	end;

OnMyMobDead:
	if (mobcount("que_qsch01","#sch01_stone02::OnMyMobDead") == 0) {
		set $gqse_sch01_nm,$gqse_sch01_nm+1;
		donpcevent "#nmsomsch01_jin02::OnDisable";
		if ($gqse_sch01_nm == 3) {
			donpcevent "祈望女神#sch01_boss::Onfight";
		}
	}
	end;
}

que_qsch01,251,340,0	script	#nmsomsch01_jin03	-1,{
OnEnable:
	initnpctimer;
	end;

OnDisable:
	killmonster "que_qsch01","#nmsomsch01_jin03::OnMyMobDead";
	stopnpctimer;
	end;

OnTimer5000:
	mapannounce "que_qsch01","北之魔法阵正在召唤神殿管理者.",bc_map,"0x4d4dff";
	monster "que_qsch01",247,329,"神殿管理者",1933,1,"#nmsomsch01_jin03::OnMyMobDead";
	monster "que_qsch01",249,329,"神殿管理者",1933,1,"#nmsomsch01_jin03::OnMyMobDead";
	monster "que_qsch01",251,329,"神殿管理者",1933,1,"#nmsomsch01_jin03::OnMyMobDead";
	monster "que_qsch01",253,329,"神殿管理者",1933,1,"#nmsomsch01_jin03::OnMyMobDead";
	monster "que_qsch01",255,329,"神殿管理者",1933,1,"#nmsomsch01_jin03::OnMyMobDead";
	monster "que_qsch01",243,339,"神殿管理者",1933,1,"#nmsomsch01_jin03::OnMyMobDead";
	monster "que_qsch01",245,337,"神殿管理者",1933,1,"#nmsomsch01_jin03::OnMyMobDead";
	monster "que_qsch01",247,335,"神殿管理者",1933,1,"#nmsomsch01_jin03::OnMyMobDead";
	monster "que_qsch01",247,333,"神殿管理者",1933,1,"#nmsomsch01_jin03::OnMyMobDead";
	monster "que_qsch01",254,333,"神殿管理者",1933,1,"#nmsomsch01_jin03::OnMyMobDead";
	monster "que_qsch01",256,335,"神殿管理者",1933,1,"#nmsomsch01_jin03::OnMyMobDead";
	monster "que_qsch01",258,337,"神殿管理者",1933,1,"#nmsomsch01_jin03::OnMyMobDead";
	monster "que_qsch01",260,339,"神殿管理者",1933,1,"#nmsomsch01_jin03::OnMyMobDead";
	end;

OnTimer120000:
	monster "que_qsch01",251,343,"神殿管理者",1933,1,"#nmsomsch01_jin03::OnMyMobDead";
	monster "que_qsch01",252,343,"神殿管理者",1933,1,"#nmsomsch01_jin03::OnMyMobDead";
	monster "que_qsch01",255,341,"神殿管理者",1933,1,"#nmsomsch01_jin03::OnMyMobDead";
	monster "que_qsch01",255,340,"神殿管理者",1933,1,"#nmsomsch01_jin03::OnMyMobDead";
	monster "que_qsch01",254,337,"神殿管理者",1933,1,"#nmsomsch01_jin03::OnMyMobDead";
	monster "que_qsch01",253,336,"神殿管理者",1933,1,"#nmsomsch01_jin03::OnMyMobDead";
	monster "que_qsch01",250,336,"神殿管理者",1933,1,"#nmsomsch01_jin03::OnMyMobDead";
	monster "que_qsch01",249,337,"神殿管理者",1933,1,"#nmsomsch01_jin03::OnMyMobDead";
	monster "que_qsch01",248,340,"神殿管理者",1933,1,"#nmsomsch01_jin03::OnMyMobDead";
	monster "que_qsch01",248,341,"神殿管理者",1933,1,"#nmsomsch01_jin03::OnMyMobDead";
	end;

OnTimer240000:
	monster "que_qsch01",250,343,"神殿管理者",1933,1,"#nmsomsch01_jin03::OnMyMobDead";
	monster "que_qsch01",252,343,"神殿管理者",1933,1,"#nmsomsch01_jin03::OnMyMobDead";
	monster "que_qsch01",254,342,"神殿管理者",1933,1,"#nmsomsch01_jin03::OnMyMobDead";
	monster "que_qsch01",255,340,"神殿管理者",1933,1,"#nmsomsch01_jin03::OnMyMobDead";
	monster "que_qsch01",255,338,"神殿管理者",1933,1,"#nmsomsch01_jin03::OnMyMobDead";
	monster "que_qsch01",253,336,"神殿管理者",1933,1,"#nmsomsch01_jin03::OnMyMobDead";
	monster "que_qsch01",250,336,"神殿管理者",1933,1,"#nmsomsch01_jin03::OnMyMobDead";
	monster "que_qsch01",248,338,"神殿管理者",1933,1,"#nmsomsch01_jin03::OnMyMobDead";
	monster "que_qsch01",248,340,"神殿管理者",1933,1,"#nmsomsch01_jin03::OnMyMobDead";
	monster "que_qsch01",249,342,"神殿管理者",1933,1,"#nmsomsch01_jin03::OnMyMobDead";
	end;

OnTimer360000:
	monster "que_qsch01",250,343,"神殿管理者",1933,1,"#nmsomsch01_jin03::OnMyMobDead";
	monster "que_qsch01",252,343,"神殿管理者",1933,1,"#nmsomsch01_jin03::OnMyMobDead";
	monster "que_qsch01",254,342,"神殿管理者",1933,1,"#nmsomsch01_jin03::OnMyMobDead";
	monster "que_qsch01",255,340,"神殿管理者",1933,1,"#nmsomsch01_jin03::OnMyMobDead";
	monster "que_qsch01",255,338,"神殿管理者",1933,1,"#nmsomsch01_jin03::OnMyMobDead";
	monster "que_qsch01",253,336,"神殿管理者",1933,1,"#nmsomsch01_jin03::OnMyMobDead";
	monster "que_qsch01",251,336,"神殿管理者",1933,1,"#nmsomsch01_jin03::OnMyMobDead";
	monster "que_qsch01",249,337,"神殿管理者",1933,1,"#nmsomsch01_jin03::OnMyMobDead";
	monster "que_qsch01",248,339,"神殿管理者",1933,1,"#nmsomsch01_jin03::OnMyMobDead";
	monster "que_qsch01",248,341,"神殿管理者",1933,1,"#nmsomsch01_jin03::OnMyMobDead";
	stopnpctimer;
	end;

OnMyMobDead:
	end;
}

que_qsch01,2,10,0	script	#sch01_stone03	844,{
OnEnable:
	monster "que_qsch01",251,343,"北之魔法守护者",1933,1,"#sch01_stone03::OnMyMobDead";
	monster "que_qsch01",252,343,"北之魔法守护者",1933,1,"#sch01_stone03::OnMyMobDead";
	monster "que_qsch01",255,341,"北之魔法守护者",1933,1,"#sch01_stone03::OnMyMobDead";
	monster "que_qsch01",255,340,"北之魔法守护者",1933,1,"#sch01_stone03::OnMyMobDead";
	monster "que_qsch01",254,337,"北之魔法守护者",1933,1,"#sch01_stone03::OnMyMobDead";
	monster "que_qsch01",253,336,"北之魔法守护者",1933,1,"#sch01_stone03::OnMyMobDead";
	monster "que_qsch01",250,336,"北之魔法守护者",1933,1,"#sch01_stone03::OnMyMobDead";
	monster "que_qsch01",249,337,"北之魔法守护者",1933,1,"#sch01_stone03::OnMyMobDead";
	monster "que_qsch01",248,340,"北之魔法守护者",1933,1,"#sch01_stone03::OnMyMobDead";
	monster "que_qsch01",248,341,"北之魔法守护者",1933,1,"#sch01_stone03::OnMyMobDead";
	end;

Onreset:
	killmonster "que_qsch01","#sch01_stone03::OnMyMobDead";
	end;

OnMyMobDead:
	if (mobcount("que_qsch01","#sch01_stone03::OnMyMobDead") == 0) {
		set $gqse_sch01_nm,$gqse_sch01_nm+1;
		donpcevent "#nmsomsch01_jin03::OnDisable";

		if ($gqse_sch01_nm == 3) {
			donpcevent "祈望女神#sch01_boss::Onfight";
		}
	}
	end;
}

que_qsch01,235,285,5	script	影之守护者#sch01_01	1752,4,4,{
OnInit:
	disablenpc "影之守护者#sch01_01";
	end;

OnDisable:
	killmonster "que_qsch01","影之守护者#sch01_01::OnMyMobDead";
	disablenpc "影之守护者#sch01_01";
	end;

OnTouch:
	disablenpc "影之守护者#sch01_01";
	monster "que_qsch01",234,284,"影之守护者",1752,1,"影之守护者#sch01_01::OnMyMobDead";
	monster "que_qsch01",235,285,"影之守护者",1752,1,"影之守护者#sch01_01::OnMyMobDead";
	monster "que_qsch01",236,286,"影之守护者",1752,1,"影之守护者#sch01_01::OnMyMobDead";
	end;

OnMyMobDead:
	end;
}

que_qsch01,224,290,5	script	影之守护者#sch01_02	1752,4,4,{
OnInit:
	disablenpc "影之守护者#sch01_02";
	end;

OnDisable:
	killmonster "que_qsch01","影之守护者#sch01_02::OnMyMobDead";
	disablenpc "影之守护者#sch01_02";
	end;

OnTouch:
	disablenpc "影之守护者#sch01_02";
	monster "que_qsch01",223,289,"影之守护者",1752,1,"影之守护者#sch01_02::OnMyMobDead";
	monster "que_qsch01",224,290,"影之守护者",1752,1,"影之守护者#sch01_02::OnMyMobDead";
	monster "que_qsch01",225,291,"影之守护者",1752,1,"影之守护者#sch01_02::OnMyMobDead";
	end;

OnMyMobDead:
	end;
}

que_qsch01,236,296,5	script	影之守护者#sch01_03	1752,4,4,{
OnInit:
	disablenpc "影之守护者#sch01_03";
	end;

OnDisable:
	killmonster "que_qsch01","影之守护者#sch01_03::OnMyMobDead";
	disablenpc "影之守护者#sch01_03";
	end;

OnTouch:
	disablenpc "影之守护者#sch01_03";
	monster "que_qsch01",235,295,"影之守护者",1752,1,"影之守护者#sch01_03::OnMyMobDead";
	monster "que_qsch01",236,296,"影之守护者",1752,1,"影之守护者#sch01_03::OnMyMobDead";
	monster "que_qsch01",237,297,"影之守护者",1752,1,"影之守护者#sch01_03::OnMyMobDead";
	end;

OnMyMobDead:
	end;
}

que_qsch01,225,303,5	script	影之守护者#sch01_04	1752,4,4,{
OnInit:
	disablenpc "影之守护者#sch01_04";
	end;

OnDisable:
	killmonster "que_qsch01","影之守护者#sch01_04::OnMyMobDead";
	disablenpc "影之守护者#sch01_04";
	end;

OnTouch:
	disablenpc "影之守护者#sch01_04";
	monster "que_qsch01",224,302,"影之守护者",1752,1,"影之守护者#sch01_04::OnMyMobDead";
	monster "que_qsch01",225,303,"影之守护者",1752,1,"影之守护者#sch01_04::OnMyMobDead";
	monster "que_qsch01",226,304,"影之守护者",1752,1,"影之守护者#sch01_04::OnMyMobDead";
	end;

OnMyMobDead:
	end;
}

que_qsch01,266,296,3	script	血腥猎魔#sch01_ac01	1753,4,4,{
OnInit:
	disablenpc "血腥猎魔#sch01_ac01";
	end;

OnDisable:
	killmonster "que_qsch01","血腥猎魔#sch01_ac01::OnMyMobDead";
	disablenpc "血腥猎魔#sch01_ac01";
	end;

OnTouch:
	disablenpc "血腥猎魔#sch01_ac01";
	monster "que_qsch01",265,297,"血腥猎魔",1753,1,"血腥猎魔#sch01_ac01::OnMyMobDead";
	monster "que_qsch01",266,296,"血腥猎魔",1753,1,"血腥猎魔#sch01_ac01::OnMyMobDead";
	monster "que_qsch01",267,295,"血腥猎魔",1753,1,"血腥猎魔#sch01_ac01::OnMyMobDead";
	end;

OnMyMobDead:
	end;
}

que_qsch01,271,283,3	script	血腥猎魔#sch01_ac02	1753,4,4,{
OnInit:
	disablenpc "血腥猎魔#sch01_ac02";
	end;

OnDisable:
	killmonster "que_qsch01","血腥猎魔#sch01_ac02::OnMyMobDead";
	disablenpc "血腥猎魔#sch01_ac02";
	end;

OnTouch:
	disablenpc "血腥猎魔#sch01_ac02";
	monster "que_qsch01",270,284,"血腥猎魔",1753,1,"血腥猎魔#sch01_ac02::OnMyMobDead";
	monster "que_qsch01",271,283,"血腥猎魔",1753,1,"血腥猎魔#sch01_ac02::OnMyMobDead";
	monster "que_qsch01",272,282,"血腥猎魔",1753,1,"血腥猎魔#sch01_ac02::OnMyMobDead";
	end;

OnMyMobDead:
	end;
}

que_qsch01,270,307,3	script	血腥猎魔#sch01_ac03	1753,4,4,{
OnInit:
	disablenpc "血腥猎魔#sch01_ac03";
	end;

OnDisable:
	killmonster "que_qsch01","血腥猎魔#sch01_ac03::OnMyMobDead";
	disablenpc "血腥猎魔#sch01_ac03";
	end;

OnTouch:
	disablenpc "血腥猎魔#sch01_ac03";
	monster "que_qsch01",269,308,"血腥猎魔",1753,1,"血腥猎魔#sch01_ac03::OnMyMobDead";
	monster "que_qsch01",270,307,"血腥猎魔",1753,1,"血腥猎魔#sch01_ac03::OnMyMobDead";
	monster "que_qsch01",271,306,"血腥猎魔",1753,1,"血腥猎魔#sch01_ac03::OnMyMobDead";
	end;

OnMyMobDead:
	end;
}

que_qsch01,279,300,3	script	血腥猎魔#sch01_ac04	1753,4,4,{
OnInit:
	disablenpc "血腥猎魔#sch01_ac04";
	end;

OnDisable:
	killmonster "que_qsch01","血腥猎魔#sch01_ac04::OnMyMobDead";
	disablenpc "血腥猎魔#sch01_ac04";
	end;

OnTouch:
	disablenpc "血腥猎魔#sch01_ac04";
	monster "que_qsch01",278,301,"血腥猎魔",1753,1,"血腥猎魔#sch01_ac04::OnMyMobDead";
	monster "que_qsch01",279,300,"血腥猎魔",1753,1,"血腥猎魔#sch01_ac04::OnMyMobDead";
	monster "que_qsch01",280,299,"血腥猎魔",1753,1,"血腥猎魔#sch01_ac04::OnMyMobDead";
	end;

OnMyMobDead:
	end;
}

que_qsch01,247,330,5	script	神殿管理者#sch01_ac01	1933,4,4,{
OnInit:
	disablenpc "神殿管理者#sch01_ac01";
	end;

OnDisable:
	killmonster "que_qsch01","神殿管理者#sch01_ac01::OnMyMobDead";
	disablenpc "神殿管理者#sch01_ac01";
	end;

OnTouch:
	disablenpc "神殿管理者#sch01_ac01";
	monster "que_qsch01",246,330,"神殿管理者",1933,1,"神殿管理者#sch01_ac01::OnMyMobDead";
	monster "que_qsch01",247,330,"神殿管理者",1933,1,"神殿管理者#sch01_ac01::OnMyMobDead";
	monster "que_qsch01",248,330,"神殿管理者",1933,1,"神殿管理者#sch01_ac01::OnMyMobDead";
	end;

OnMyMobDead:
	end;
}

que_qsch01,255,330,3	script	神殿管理者#sch01_ac02	1933,4,4,{
OnInit:
	disablenpc "神殿管理者#sch01_ac02";
	end;

OnDisable:
	killmonster "que_qsch01","神殿管理者#sch01_ac02::OnMyMobDead";
	disablenpc "神殿管理者#sch01_ac02";
	end;

OnTouch:
	disablenpc "神殿管理者#sch01_ac02";
	monster "que_qsch01",254,330,"神殿管理者",1933,1,"神殿管理者#sch01_ac02::OnMyMobDead";
	monster "que_qsch01",255,330,"神殿管理者",1933,1,"神殿管理者#sch01_ac02::OnMyMobDead";
	monster "que_qsch01",256,330,"神殿管理者",1933,1,"神殿管理者#sch01_ac02::OnMyMobDead";
	end;

OnMyMobDead:
	end;
}

que_qsch01,251,255,3	script	祈望女神#sch01_boss	1931,{
OnInit:
	hideonnpc "祈望女神#sch01_boss";
	end;

OnDisable:
	killmonster "que_qsch01","祈望女神#sch01_boss::OnMyMobDead";
	hideonnpc "祈望女神#sch01_boss";
	stopnpctimer;
	end;

Onfight:
	initnpctimer;
	end;

OnTimer1000:
	mapannounce "que_qsch01","祈望女神: 你们安全地到了这里. 你们的守卫者死了吗...?",bc_map,"0x00ff00";
	end;

OnTimer4000:
	mapannounce "que_qsch01","祈望女神: 我真诚地为你们的努力感到高兴!",bc_map,"0x00ff00";
	end;

OnTimer5000:
	specialeffect EF_ICECRASH;
	hideonnpc "祈望女神#sch01_boss";
	specialeffect EF_SPHERE;
	monster "que_qsch01",252,340,"祈望女神",1931,1,"祈望女神#sch01_boss::OnMyMobDead";
	stopnpctimer;
	end;

OnMyMobDead:
	if (mobcount("que_qsch01","祈望女神#sch01_boss::OnMyMobDead") == 0) {
		donpcevent "#okolnir_sch01::Onstop";
		donpcevent "祈望女神#sch01_gift::OnEnable";
		mapannounce "que_qsch01","祈望女神: ... 很好, 你们应该得到女神的礼物.",bc_map,"0x00ff00";
	}
	end;
}

que_qsch01,252,340,3	script	祈望女神#sch01_gift	403,{
	set .@GID, GetCastleData("schg_cas01",1);
	if (getcharid(2) == .@GID) {
		if (strcharinfo(0) == getguildmaster(.@GID)) {
			if ((countitem(7830) > 0) && (countitem(7831) > 0) && (countitem(7832) > 0) && (countitem(7833) > 0) && (countitem(7834) > 0) && (countitem(2357) > 0) && (countitem(7510) > 99) && (countitem(969) > 9) && (countitem(985) > 19)) {
				cutin "wish_maiden12",1;
				mes "[祈望女神]";
				mes "就像我说的, 我会给你女神的礼物.";
				mes "你拥有所有我需要的东西...";
				next;
				mes "[祈望女神]";
				mes "你将获得伟大的瓦尔基丽娅的能力...";
				next;
				mes "[祈望女神]";
				mes "我会给你一些非常有趣的东西.";
				mes "你们一定会非常兴奋...";
				//next;
				//mes "[祈望女神]";
				//mes "到拉赫和朱诺去见Ravies姐妹.";
				next;
				cutin "wish_maiden32",1;
				mes "[祈望女神]";
				mes "我还会问你开启这里的大门, 从而让你再回到这里.";
				mes "... 奥克尔尼尔不会永久长存...";
				delitem 7830,1; //女神之泪
				delitem 7831,1; //瓦尔基丽娅的象征
				delitem 7832,1; //布伦希尔德的凯甲碎片
				delitem 7833,1; //英雄的遗骸
				delitem 7834,1; //安德瓦利的戒指
				delitem 2357,1; //瓦尔基丽娅的铠甲
				delitem 7510,100; //瓦尔基丽娅的花
				delitem 969,10; //黄金
				delitem 985,20; //铝
				getitem 2383,1; //布伦希尔德
				getitem 7840,1; //瓦尔基丽娅的的礼物
				announce "公会["+ GetGuildName(.@GID) +"]的["+ strcharinfo(0) +"], 为这个世界带来了布伦希尔德.",bc_all,"0x70dbdb";
				close2;
				cutin "wish_maiden11",255;
				disablenpc "祈望女神#sch01_gift";
				enablenpc "#to_agit_sch01_gate";
				end;
			}
			else {
				cutin "wish_maiden13",1;
				mes "[祈望女神]";
				mes "就像我说的, 你完全可以拥有布伦希尔德.";
				mes "但是, 你并没有我所需要的东西...";
				next;
				mes "[祈望女神]";
				mes "... 你是不是忘了什么东西?";
				close2;
			}
		}
		else {
			cutin "wish_maiden12",1;
			mes "[祈望女神]";
			mes "你们是一个队伍的吗?...";
			mes "团结起来才会强大, 但在欲望的唆使下, 人们会非常容易动摇.";
			next;
			mes "[祈望女神]";
			mes "人类都是不完美的, 所以当他们需要帮助的时候, 神就会出现为他们指点迷津.";
			mes "....";
			next;
			mes "[祈望女神]";
			mes "这就是真理.";
			mes "所以不要为你所做的一切而感到遗憾...";
			close2;
		}
	}
	cutin "wish_maiden11",255;
	end;

OnInit:
	disablenpc "祈望女神#sch01_gift";
	end;

OnEnable:
	enablenpc "祈望女神#sch01_gift";
	initnpctimer;
	end;

OnDisable:
	disablenpc "祈望女神#sch01_gift";
	stopnpctimer;
	end;

OnTimer280000:
	mapannounce "que_qsch01","祈望女神: ... 奥克尔尼尔就快要消失了... 我会把你们送回你们本来属于的地方.",bc_map,"0x00ff00";
	end;

OnTimer290000:
	mapwarp "que_qsch01","schg_cas01",369,306;
	donpcevent "#to_agit_sch01_gate::OnDisable";
	end;

OnTimer300000:
	donpcevent "#okolnir_sch01::OnDisable";
	set $gqse_sch01_miro,0;
	set $gqse_sch01_pcc,0;
	set $gqse_sch01_gd,0;
	set $gqse_sch01_nm,0;
	set $siz_sch01_on,2;
	donpcevent "#okolnir_sch01_time01::OnEnable";
	stopnpctimer;
	end;
}

que_qsch01,252,339,0	script	#to_agit_sch01_gate	45,1,1,{
OnInit:
	disablenpc "#to_agit_sch01_gate";
	end;

OnTouch:
	warp "schg_cas01",369,306;
	end;
}

que_qsch01,1,6,0	script	#okolnir_sch01_time01	844,{
OnInit:
	if ($siz_sch01_on == 2) {
		initnpctimer;
	}
	end;

OnEnable:
	set $gqse_sch01_time,0;
	initnpctimer;
	end;

Onreset:
	set $siz_sch01_on,0;
	set $gqse_sch01_time,0;
	stopnpctimer;
	end;

OnTimer3600000:
	if ($gqse_sch01_time < 12) {
		set $gqse_sch01_time,$gqse_sch01_time+1;
		initnpctimer;
	}
	else if ($gqse_sch01_time == 12) {
		set $siz_sch01_on,0;
		set $gqse_sch01_time,0;
		enablenpc "祈望女神#gq_sch01";
		enablenpc "碧亚玫特#sch01";
		hideoffnpc "祈望女神#sch01_boss";
		stopnpctimer;
	}
	end;
}

que_qsch01,116,313,0,0	monster	花园管理者	1932,1,180000,0,0
que_qsch01,120,285,0,0	monster	花园管理者	1932,1,180000,0,0
que_qsch01,117,236,0,0	monster	花园管理者	1932,1,180000,0,0
que_qsch01,103,223,0,0	monster	花园管理者	1932,1,180000,0,0
que_qsch01,85,204,0,0	monster	花园管理者	1932,1,180000,0,0
que_qsch01,79,186,0,0	monster	花园管理者	1932,1,180000,0,0
que_qsch01,73,167,0,0	monster	花园管理者	1932,1,180000,0,0
que_qsch01,68,150,0,0	monster	花园管理者	1932,1,180000,0,0
que_qsch01,71,128,0,0	monster	花园管理者	1932,1,180000,0,0
que_qsch01,69,118,0,0	monster	花园管理者	1932,1,180000,0,0
que_qsch01,117,78,0,0	monster	花园管理者	1932,1,180000,0,0
que_qsch01,110,79,0,0	monster	花园管理者	1932,1,180000,0,0
que_qsch01,141,80,0,0	monster	花园管理者	1932,1,180000,0,0
que_qsch01,158,84,0,0	monster	花园管理者	1932,1,180000,0,0
que_qsch01,193,104,0,0	monster	花园管理者	1932,1,180000,0,0
que_qsch01,119,269,0,0	monster	花园管理者	1932,1,180000,0,0
que_qsch01,155,77,0,0	monster	花园管理者	1932,1,180000,0,0
que_qsch01,110,317,0,0	monster	花园监视者	1933,1,600000,0,0
que_qsch01,115,295,0,0	monster	花园监视者	1933,1,1200000,0,0
que_qsch01,116,256,0,0	monster	花园监视者	1933,1,600000,0,0
que_qsch01,113,242,0,0	monster	花园监视者	1933,1,1200000,0,0
que_qsch01,99,223,0,0	monster	花园监视者	1933,1,600000,0,0
que_qsch01,94,216,0,0	monster	花园监视者	1933,1,1200000,0,0
que_qsch01,77,198,0,0	monster	花园监视者	1933,1,600000,0,0
que_qsch01,70,174,0,0	monster	花园监视者	1933,1,1200000,0,0
que_qsch01,72,147,0,0	monster	花园监视者	1933,1,600000,0,0
que_qsch01,64,134,0,0	monster	花园监视者	1933,1,1200000,0,0
que_qsch01,77,107,0,0	monster	花园监视者	1933,1,600000,0,0
que_qsch01,84,88,0,0	monster	花园监视者	1933,1,1200000,0,0
que_qsch01,98,82,0,0	monster	花园监视者	1933,1,600000,0,0
que_qsch01,129,79,0,0	monster	花园监视者	1933,1,1200000,0,0
que_qsch01,91,124,0,0	monster	花园监视者	1933,1,600000,0,0
que_qsch01,173,95,0,0	monster	花园监视者	1933,1,1200000,0,0
que_qsch01,179,127,0,0	monster	花园监视者	1933,1,600000,0,0
que_qsch01,195,120,0,0	monster	花园监视者	1933,1,1200000,0,0
que_qsch01,178,159,0,0	monster	花园监视者	1933,1,600000,0,0
que_qsch01,88,145,0,0	monster	花园监视者	1933,1,1200000,0,0
que_qsch01,94,157,0,0	monster	花园监视者	1933,1,600000,0,0
que_qsch01,95,177,0,0	monster	花园监视者	1933,1,1200000,0,0
que_qsch01,129,196,0,0	monster	花园监视者	1933,1,600000,0,0
que_qsch01,154,196,0,0	monster	花园监视者	1933,1,1200000,0,0
que_qsch01,170,187,0,0	monster	花园监视者	1933,1,600000,0,0
que_qsch01,194,180,0,0	monster	花园监视者	1933,1,1200000,0,0
que_qsch01,214,181,0,0	monster	花园监视者	1933,1,600000,0,0
que_qsch01,243,199,0,0	monster	花园监视者	1933,1,1200000,0,0
